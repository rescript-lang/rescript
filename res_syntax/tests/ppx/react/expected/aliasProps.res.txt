@@jsxConfig({version: 4, mode: "automatic"})

module C0 = {
  type props<'priority, 'text> = {priority: 'priority, text?: 'text}

  let make = ({priority: _, ?text, _}: props<_, _>) => {
    let _ = priority
    let text = switch text {
    | Some(text) => text
    | None => "Test"
    }

    React.string(text)
  }
  let make = {
    let \"AliasProps$C0" = (props: props<_>) => make(props)

    \"AliasProps$C0"
  }
}

module C1 = {
  type props<'priority, 'text> = {priority: 'priority, text?: 'text}

  let make = ({priority: p, ?text, _}: props<_, _>) => {
    let p = priority
    let text = switch text {
    | Some(text) => text
    | None => "Test"
    }

    React.string(p ++ text)
  }
  let make = {
    let \"AliasProps$C1" = (props: props<_>) => make(props)

    \"AliasProps$C1"
  }
}

module C2 = {
  type props<'foo> = {foo?: 'foo}

  let make = ({foo: ?bar, _}: props<_>) => {
    let bar = switch bar {
    | Some(foo) => foo
    | None => ""
    }

    React.string(bar)
  }
  let make = {
    let \"AliasProps$C2" = (props: props<_>) => make(props)

    \"AliasProps$C2"
  }
}

module C3 = {
  type props<'foo, 'a, 'b> = {foo?: 'foo, a?: 'a, b: 'b}

  let make = ({foo: ?bar, ?a, b, _}: props<_, _, _>) => {
    let bar = switch bar {
    | Some(foo) => foo
    | None => ""
    }
    let a = switch a {
    | Some(a) => a
    | None => bar
    }
    let b = b

    {
      React.string(bar ++ a ++ b)
    }
  }
  let make = {
    let \"AliasProps$C3" = (props: props<_>) => make(props)

    \"AliasProps$C3"
  }
}
