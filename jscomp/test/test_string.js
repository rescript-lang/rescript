// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

let Caml_bytes = require("../../lib/js/caml_bytes.js");
let Caml_string = require("../../lib/js/caml_string.js");
let Caml_js_exceptions = require("../../lib/js/caml_js_exceptions.js");

function f(x) {
  switch (x) {
    case "aaaabb" :
      return 0;
    case "bbbb" :
      return 1;
    default:
      throw Caml_js_exceptions.internalFromExtension({
        RE_EXN_ID: "Assert_failure",
        _1: [
          "test_string.res",
          5,
          17
        ]
      });
  }
}

function a(x) {
  return "helloworldhello" + x;
}

function b(y, x) {
  return y + ("helloworldhello" + x);
}

function c(x, y) {
  return x + "hellohiuhi" + y;
}

let v = "xx".length;

function h(s, b) {
  if (Caml_string.get(s, 0) === /* 'a' */97 && Caml_bytes.get(b, 0) === /* 'b' */98) {
    return Caml_string.get(s, 1) === Caml_bytes.get(b, 2);
  } else {
    return false;
  }
}

exports.f = f;
exports.a = a;
exports.b = b;
exports.c = c;
exports.v = v;
exports.h = h;
/* No side effect */
