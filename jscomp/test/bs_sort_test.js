// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

let Mt = require("./mt.js");
let Caml = require("../../lib/js/caml.js");
let Belt_Array = require("../../lib/js/belt_Array.js");
let Belt_Range = require("../../lib/js/belt_Range.js");
let Belt_SortArray = require("../../lib/js/belt_SortArray.js");
let Array_data_util = require("./array_data_util.js");
let Belt_SortArrayInt = require("../../lib/js/belt_SortArrayInt.js");

let suites = {
  contents: /* [] */0
};

let test_id = {
  contents: 0
};

function eq(loc, x, y) {
  Mt.eq_suites(test_id, suites, loc, x, y);
}

function b(loc, x) {
  Mt.bool_suites(test_id, suites, loc, x);
}

function cmp(x, y) {
  return x - y | 0;
}

function unions(xs, ys) {
  let lenX = xs.length;
  let lenY = ys.length;
  let o = new Array(lenX + lenY | 0);
  let v = Belt_SortArray.union(xs, 0, lenX, ys, 0, lenY, o, 0, cmp);
  o.length = v;
  return o;
}

function inters(xs, ys) {
  let lenX = xs.length;
  let lenY = ys.length;
  let o = new Array(lenX);
  let v = Belt_SortArray.intersect(xs, 0, lenX, ys, 0, lenY, o, 0, cmp);
  o.length = v;
  return o;
}

function diffs(xs, ys) {
  let lenX = xs.length;
  let lenY = ys.length;
  let o = new Array(lenX);
  let v = Belt_SortArray.diff(xs, 0, lenX, ys, 0, lenY, o, 0, cmp);
  o.length = v;
  return o;
}

eq("File \"bs_sort_test.res\", line 35, characters 5-12", unions(Array_data_util.range(1, 10), Array_data_util.range(3, 13)), Array_data_util.range(1, 13));

eq("File \"bs_sort_test.res\", line 36, characters 5-12", unions(Array_data_util.range(1, 10), Array_data_util.range(9, 13)), Array_data_util.range(1, 13));

eq("File \"bs_sort_test.res\", line 37, characters 5-12", unions(Array_data_util.range(8, 10), Array_data_util.range(9, 13)), Array_data_util.range(8, 13));

eq("File \"bs_sort_test.res\", line 38, characters 5-12", unions(Array_data_util.range(0, 2), Array_data_util.range(4, 7)), [
  0,
  1,
  2,
  4,
  5,
  6,
  7
]);

eq("File \"bs_sort_test.res\", line 42, characters 5-12", inters(Array_data_util.range(1, 10), Array_data_util.range(3, 13)), Array_data_util.range(3, 10));

eq("File \"bs_sort_test.res\", line 43, characters 5-12", inters(Array_data_util.range(1, 10), Array_data_util.range(9, 13)), Array_data_util.range(9, 10));

eq("File \"bs_sort_test.res\", line 44, characters 5-12", inters(Array_data_util.range(8, 10), Array_data_util.range(9, 13)), Array_data_util.range(9, 10));

eq("File \"bs_sort_test.res\", line 45, characters 5-12", inters(Array_data_util.range(0, 2), Array_data_util.range(4, 7)), []);

eq("File \"bs_sort_test.res\", line 49, characters 5-12", diffs(Array_data_util.range(1, 10), Array_data_util.range(3, 13)), Array_data_util.range(1, 2));

eq("File \"bs_sort_test.res\", line 50, characters 5-12", diffs(Array_data_util.range(1, 10), Array_data_util.range(9, 13)), Array_data_util.range(1, 8));

eq("File \"bs_sort_test.res\", line 51, characters 5-12", diffs(Array_data_util.range(8, 10), Array_data_util.range(9, 13)), Array_data_util.range(8, 8));

eq("File \"bs_sort_test.res\", line 52, characters 5-12", diffs(Array_data_util.range(0, 2), Array_data_util.range(4, 7)), [
  0,
  1,
  2
]);

b("File \"bs_sort_test.res\", line 56, characters 4-11", Belt_Range.every(0, 200, (function (i) {
  let v = Array_data_util.randomRange(0, i);
  Belt_SortArray.stableSortInPlaceBy(v, cmp);
  return Belt_SortArray.isSorted(v, cmp);
})));

b("File \"bs_sort_test.res\", line 64, characters 4-11", Belt_Range.every(0, 200, (function (i) {
  let v = Array_data_util.randomRange(0, i);
  Belt_SortArray.stableSortInPlaceBy(v, cmp);
  return Belt_SortArray.isSorted(v, cmp);
})));

b("File \"bs_sort_test.res\", line 71, characters 4-11", Belt_SortArray.isSorted([], cmp));

b("File \"bs_sort_test.res\", line 73, characters 4-11", Belt_SortArray.isSorted([0], cmp));

b("File \"bs_sort_test.res\", line 75, characters 4-11", Belt_SortArray.isSorted([
  0,
  1
], cmp));

b("File \"bs_sort_test.res\", line 76, characters 4-11", !Belt_SortArray.isSorted([
  1,
  0
], cmp));

let u = Array_data_util.randomRange(0, 1000000);

let u1 = u.slice(0);

let u2 = u.slice(0);

Belt_SortArray.stableSortInPlaceBy(u, cmp);

b("File \"bs_sort_test.res\", line 86, characters 4-11", Belt_SortArray.isSorted(u, cmp));

Belt_SortArrayInt.stableSortInPlace(u2);

b("File \"bs_sort_test.res\", line 88, characters 4-11", Belt_SortArray.isSorted(u2, cmp));

Belt_SortArray.stableSortInPlaceBy(u1, cmp);

b("File \"bs_sort_test.res\", line 90, characters 4-11", Belt_SortArray.isSorted(u1, cmp));

let u$1 = [
  [
    1,
    "a"
  ],
  [
    1,
    "b"
  ],
  [
    2,
    "a"
  ]
];

eq("File \"bs_sort_test.res\", line 95, characters 5-12", Belt_SortArray.stableSortBy(u$1, (function (param, param$1) {
  return param[0] - param$1[0] | 0;
})), [
  [
    1,
    "a"
  ],
  [
    1,
    "b"
  ],
  [
    2,
    "a"
  ]
]);

let u$2 = [
  [
    1,
    "b"
  ],
  [
    1,
    "a"
  ],
  [
    1,
    "b"
  ],
  [
    2,
    "a"
  ]
];

eq("File \"bs_sort_test.res\", line 98, characters 4-11", Belt_SortArray.stableSortBy(u$2, (function (param, param$1) {
  return param[0] - param$1[0] | 0;
})), [
  [
    1,
    "b"
  ],
  [
    1,
    "a"
  ],
  [
    1,
    "b"
  ],
  [
    2,
    "a"
  ]
]);

let u$3 = [
  [
    1,
    "c"
  ],
  [
    1,
    "b"
  ],
  [
    1,
    "a"
  ],
  [
    1,
    "b"
  ],
  [
    1,
    "c"
  ],
  [
    2,
    "a"
  ]
];

eq("File \"bs_sort_test.res\", line 104, characters 4-11", Belt_SortArray.stableSortBy(u$3, (function (param, param$1) {
  return param[0] - param$1[0] | 0;
})), [
  [
    1,
    "c"
  ],
  [
    1,
    "b"
  ],
  [
    1,
    "a"
  ],
  [
    1,
    "b"
  ],
  [
    1,
    "c"
  ],
  [
    2,
    "a"
  ]
]);

eq("File \"bs_sort_test.res\", line 111, characters 5-12", Belt_SortArray.binarySearchBy([
  1,
  3,
  5,
  7
], 4, Caml.int_compare) ^ -1, 2);

eq("File \"bs_sort_test.res\", line 112, characters 5-12", Belt_SortArray.binarySearchBy([
  1,
  2,
  3,
  4,
  33,
  35,
  36
], 33, cmp), 4);

eq("File \"bs_sort_test.res\", line 113, characters 5-12", Belt_SortArray.binarySearchBy([
  1,
  2,
  3,
  4,
  33,
  35,
  36
], 1, cmp), 0);

eq("File \"bs_sort_test.res\", line 114, characters 5-12", Belt_SortArray.binarySearchBy([
  1,
  2,
  3,
  4,
  33,
  35,
  36
], 2, cmp), 1);

eq("File \"bs_sort_test.res\", line 115, characters 5-12", Belt_SortArray.binarySearchBy([
  1,
  2,
  3,
  4,
  33,
  35,
  36
], 3, cmp), 2);

eq("File \"bs_sort_test.res\", line 116, characters 5-12", Belt_SortArray.binarySearchBy([
  1,
  2,
  3,
  4,
  33,
  35,
  36
], 4, cmp), 3);

let aa = Array_data_util.range(0, 1000);

b("File \"bs_sort_test.res\", line 118, characters 4-11", Belt_Range.every(0, 1000, (function (i) {
  return Belt_SortArray.binarySearchBy(aa, i, cmp) === i;
})));

let cc = Belt_Array.map(Array_data_util.range(0, 2000), (function (x) {
  return (x << 1);
}));

eq("File \"bs_sort_test.res\", line 121, characters 5-12", Belt_SortArray.binarySearchBy(cc, 5000, cmp) ^ -1, 2001);

eq("File \"bs_sort_test.res\", line 122, characters 5-12", Belt_SortArray.binarySearchBy(cc, -1, cmp) ^ -1, 0);

eq("File \"bs_sort_test.res\", line 123, characters 5-12", Belt_SortArray.binarySearchBy(cc, 0, cmp), 0);

eq("File \"bs_sort_test.res\", line 125, characters 5-12", Belt_SortArray.binarySearchBy(cc, 1, cmp) ^ -1, 1);

b("File \"bs_sort_test.res\", line 126, characters 6-13", Belt_Range.every(0, 1999, (function (i) {
  return (Belt_SortArray.binarySearchBy(cc, (i << 1) + 1 | 0, cmp) ^ -1) === (i + 1 | 0);
})));

function lt(x, y) {
  return x < y;
}

eq("File \"bs_sort_test.res\", line 135, characters 5-12", Belt_SortArray.strictlySortedLength([], lt), 0);

eq("File \"bs_sort_test.res\", line 136, characters 5-12", Belt_SortArray.strictlySortedLength([1], lt), 1);

eq("File \"bs_sort_test.res\", line 137, characters 5-12", Belt_SortArray.strictlySortedLength([
  1,
  1
], lt), 1);

eq("File \"bs_sort_test.res\", line 138, characters 5-12", Belt_SortArray.strictlySortedLength([
  1,
  1,
  2
], lt), 1);

eq("File \"bs_sort_test.res\", line 139, characters 5-12", Belt_SortArray.strictlySortedLength([
  1,
  2
], lt), 2);

eq("File \"bs_sort_test.res\", line 140, characters 5-12", Belt_SortArray.strictlySortedLength([
  1,
  2,
  3,
  4,
  3
], lt), 4);

eq("File \"bs_sort_test.res\", line 141, characters 5-12", Belt_SortArray.strictlySortedLength([
  4,
  4,
  3,
  2,
  1
], lt), 1);

eq("File \"bs_sort_test.res\", line 142, characters 5-12", Belt_SortArray.strictlySortedLength([
  4,
  3,
  2,
  1
], lt), -4);

eq("File \"bs_sort_test.res\", line 143, characters 5-12", Belt_SortArray.strictlySortedLength([
  4,
  3,
  2,
  1,
  0
], lt), -5);

Mt.from_pair_suites("Bs_sort_test", suites.contents);

let I;

let S;

let R;

let A;

let SI;

exports.suites = suites;
exports.test_id = test_id;
exports.eq = eq;
exports.b = b;
exports.I = I;
exports.S = S;
exports.R = R;
exports.cmp = cmp;
exports.A = A;
exports.unions = unions;
exports.inters = inters;
exports.diffs = diffs;
exports.SI = SI;
exports.lt = lt;
/*  Not a pure module */
