// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

let Caml_js_exceptions = require("../../lib/js/caml_js_exceptions.js");

function f0(x) {
  let tmp;
  if (x > 3) {
    tmp = x => x + 1 | 0;
  } else {
    throw Caml_js_exceptions.internalMakeExn("Not_found");
  }
  return tmp(3);
}

function f1(x) {
  throw Caml_js_exceptions.internalMakeExn("Not_found");
  return undefined(x);
}

function f3(x) {
  let tmp;
  switch (x) {
    case 0 :
      tmp = x => x + 1 | 0;
      break;
    case 1 :
      tmp = x => x + 2 | 0;
      break;
    case 2 :
      tmp = x => x + 3 | 0;
      break;
    case 3 :
      tmp = x => x + 4 | 0;
      break;
    default:
      throw Caml_js_exceptions.internalMakeExn("Not_found");
  }
  return tmp(3);
}

exports.f0 = f0;
exports.f1 = f1;
exports.f3 = f3;
/* No side effect */
