// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

let Mt = require("./mt.js");

let suites = {
  contents: /* [] */0
};

let test_id = {
  contents: 0
};

function eq(loc, x, y) {
  test_id.contents = test_id.contents + 1 | 0;
  suites.contents = {
    hd: [
      loc + (" id " + test_id.contents.toString()),
      () => ({
        TAG: "Eq",
        _0: x,
        _1: y
      })
    ],
    tl: suites.contents
  };
}

function foo(x) {
  return Number.parseInt(x) !== 3;
}

function badInlining(obj) {
  let x = obj.field;
  Number.parseInt(x) !== 3;
}

eq("File \"gpr_1728_test.res\", line 21, characters 3-10", badInlining({
  field: "3"
}), undefined);

eq("File \"gpr_1728_test.res\", line 23, characters 3-10", Number.parseInt("-13"), -13);

eq("File \"gpr_1728_test.res\", line 24, characters 3-10", Number.parseInt("+13"), 13);

eq("File \"gpr_1728_test.res\", line 25, characters 3-10", Number.parseInt("13"), 13);

eq("File \"gpr_1728_test.res\", line 26, characters 3-10", Number.parseInt("+0x32"), 50);

eq("File \"gpr_1728_test.res\", line 27, characters 3-10", Number.parseInt("-0x32"), -50);

eq("File \"gpr_1728_test.res\", line 28, characters 3-10", Number.parseInt("0x32"), 50);

Mt.from_pair_suites("Gpr_1728_test", suites.contents);

exports.suites = suites;
exports.test_id = test_id;
exports.eq = eq;
exports.foo = foo;
exports.badInlining = badInlining;
/*  Not a pure module */
