// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

let Mt = require("./mt.js");

function generic_basename(is_dir_sep, current_dir_name, name) {
  if (name === "") {
    return current_dir_name;
  } else {
    let _n = name.length - 1 | 0;
    while (true) {
      let n = _n;
      if (n < 0) {
        return name.substr(0, 1);
      }
      if (!is_dir_sep(name, n)) {
        let _n$1 = n;
        let p = n + 1 | 0;
        while (true) {
          let n$1 = _n$1;
          if (n$1 < 0) {
            return name.substr(0, p);
          }
          if (is_dir_sep(name, n$1)) {
            return name.substr(n$1 + 1 | 0, (p - n$1 | 0) - 1 | 0);
          }
          _n$1 = n$1 - 1 | 0;
          continue;
        };
      }
      _n = n - 1 | 0;
      continue;
    };
  }
}

function basename(extra) {
  return generic_basename((s, i) => s.codePointAt(i) === /* '/' */47, "", extra);
}

let suites_0 = [
  "basename",
  param => ({
    TAG: "Eq",
    _0: basename("b/c/a.b"),
    _1: "a.b"
  })
];

let suites = {
  hd: suites_0,
  tl: /* [] */0
};

Mt.from_pair_suites("Inline_regression_test", suites);

exports.generic_basename = generic_basename;
exports.basename = basename;
exports.suites = suites;
/*  Not a pure module */
