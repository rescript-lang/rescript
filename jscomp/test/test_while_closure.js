// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

let $$Array = require("../../lib/js/array.js");
let Caml_array = require("../../lib/js/caml_array.js");
let Caml_js_exceptions = require("../../lib/js/caml_js_exceptions.js");

let v = {
  contents: 0
};

let arr = Caml_array.make(10, () => {});

function f() {
  let n = 0;
  while (n < 10) {
    let j = n;
    Caml_array.set(arr, j, () => {
      v.contents = v.contents + j | 0;
    });
    n = n + 1 | 0;
  };
}

f();

$$Array.iter(x => x(), arr);

console.log(String(v.contents));

if (v.contents !== 45) {
  throw Caml_js_exceptions.internalFromExtension({
    RE_EXN_ID: "Assert_failure",
    _1: [
      "test_while_closure.res",
      55,
      2
    ]
  });
}

let count = 10;

exports.v = v;
exports.count = count;
exports.arr = arr;
exports.f = f;
/*  Not a pure module */
