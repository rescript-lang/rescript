;;foo ((Function$ (fun _ -> bla))[@res.arity 1]) blaz
;;foo ((Function$ (fun _ -> bla))[@res.arity 1]) blaz
;;foo ((Function$ (fun _ -> bla))[@res.arity 1]) blaz
;;foo ((Function$ (fun _ -> bla))[@res.arity 1]) ((Function$ (fun _ -> blaz))
    [@res.arity 1])
;;List.map ((Function$ (fun x -> x + 1))[@res.arity 1]) myList
;;List.reduce ((Function$ (fun acc -> fun curr -> acc + curr))[@res.arity 2])
    0 myList
let unitUncurried = apply ()
;;call ~a:(((((a)[@res.namedArgLoc ]) : int))[@res.namedArgLoc ])