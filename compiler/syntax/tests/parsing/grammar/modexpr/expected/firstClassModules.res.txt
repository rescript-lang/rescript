module Device = (val
  (((let deviceName = parseCmdline () in
     try Hashtbl.find devices deviceName with | Not_found -> exit 2)
  [@res.braces ]) : (module Device)))
let draw_using_device =
  ((Function$
      (fun device_name ->
         fun picture ->
           ((let module Device = (val
               (Hashtbl.find devices device_name : (module DEVICE))) in
               Device.draw picture)
           [@res.braces ])))
  [@res.arity 2])
module New_three = (val (three : (module X_int)))
let to_int =
  ((Function$
      (fun m -> ((let module M = (val (m : (module X_int))) in M.x)
         [@res.braces ])))
  [@res.arity 1])