found a compiler bug: https://github.com/rescript-lang/rescript/issues/7838 (due to the coercing between variants)
GitHub
Incorrect compiler warning (constructor is never used to build valu...
https://rescript-lang.org/try?version=v11.1.4&amp;module=esmodule&amp;code=LYewJgrgNgpgBAUQG4wHYBc4F44G8BQcc6AngA7yY4A+iKGAgvoXLJgBYCGqYs2cAChj10ALmIBKbAD48LIgGcA7gEt0AY3ZxhaTASJFayXQxmCJ8uAF8WNm-l...
Incorrect compiler warning (constructor is never used to build valu...
[09:34]Gabriel Nordeborn: What is wrong here...?
[09:35]jaap: The warning?
[09:36]jaap: The variants are constructed in handle
[09:37]jaap: I mean, the coercion constructs the variants
[09:38]jaap: so if we have variantA :> variantB, we can mark that variantB is always constructed
[09:38]Gabriel Nordeborn: Right, so if you adapt the example to not use coercion, it marks them as constructed?
[09:39]Gabriel Nordeborn: It's good if you write this in the PR issue
[09:39]Gabriel Nordeborn: Right now, just looking at the example, I did not understand what you're referring to
[09:41]jaap: Yes
[09:41]jaap: https://rescript-lang.org/try?version=v11.1.4&module=esmodule&code=LYewJgrgNgpgBAUQG4wHYBc4F44G8BQcc6AngA7yY4A+iKGAgvoXLJgBYCGqYs2cAChj10ALmIBKbAD48LIgGcA7gEt0AY3ZxhaTASJFayXQxmCJ8uAF8WNm-lCQ+AZRgAnFG+MYA4iHDi+qwwmGgAjhAwkeLe6AB0VLIQqGr4VvxBpBTE2Ja0cQWxCcxEbHBcPHw4nAokqOqCOhji6FJYskGKqhpaTXp5dCZmAhYG1rYsZeGRkfxCIjEiCW2yFbwwAspqmtoicoaDjGaxTERWEgC00ioA5qggbjBpzI7Q8K4e7rEAQpxggZMQtpUBEojBFroEmZkql0jhMuRKLkxvlCkt0CVghxuOt+DU6g15roWit9gYtj1droyQcTsNRgYbGdAaEQTN4Dgic1DvFWmY1rAuZhRLJWldbvdHs8gA
ReScript Documentation
ReScript Playground
Try ReScript in the browser
ReScript Playground
[09:41]jaap: here with two examples
[09:41]jaap: also updated the ticket
[09:44]cristianoc: The type system was created with no coercion in mind.
[09:45]cristianoc: So fix warning —-> compiler error?
[09:47]Gabriel Nordeborn: @jaap is this not a better example? https://rescript-lang.org/try?version=v11.1.4&module=esmodule&code=LYewJgrgNgpgBAUQG4wHYBc4F44G8BQcc6AngA7yY7JroCC+hcsmAFgIapizZwAUMFBgBcxAJTYAfHiZEAzgHcAlugDGrOINoyiRAD6Ih9KfzGy4AXyZWr+UJB4BlGACcULmhgDiIcKIJEpBTEvAYAdBGe6GHojEQsmqgAjhAwqaJU0hCoKvgWvAHE5JShcBFhUTFxzDBsnNzwOOxyJKiq-Foi4iaF8spqGp2YvXAGUXQmfGa6ltZMCWgpaY0dRhkSWNIcXLACRmIAtJJKAOaoIC4weYz20PDObq5RAELsYP7ztYlL6Ya0MSZsrl8jhCkESjhwpEjFVPnUditmq12ntaOseuZFCp1JojDpdGMjBNNqZzFYiOSaphFqlUrxUV1KugNlt6rsGZhhNJmYdjmcLlcrEA
ReScript Documentation
ReScript Playground
Try ReScript in the browser
ReScript Playground
[09:47]Gabriel Nordeborn: Using the switch fixes the warning of course because you're now constructing it explicitly
[09:47]Gabriel Nordeborn: If you were to add the switch instead of coercion that'd work as well
[09:48]Gabriel Nordeborn: But from what I understand the problem is that there's a value of a type that gets coerced to another type, and that other type is not marked as used
[09:49]Gabriel Nordeborn: The value that's not coerced is marked, but the new type from the coercion is not marked
[10:35]jaap: @cristianoc there is no way to fix this warning - you need to convert it to a switch expression, but that is a lot of redudant code potentially
[10:36]cristianoc: That’s actually better. So the message is at least not inconsistent.
[10:36]jaap: but the tricky part is that when coercing, the members that are in variantA need to marked as used, but not the new ones
[10:36]cristianoc: I was worried: you remove the case, then get a compile error
[10:37]jaap: Yes you do get an error - so it's not swallowing that
[10:37]jaap: if you include it (warning) if you remove it (error)
[10:38]cristianoc: There’s no such thing in the compiler. As ocaml does not have that. So it will be a genuine extension to handle this.
And I don’t even know if possible.
Is this  global property? If so the. Compiler can’t do it.
[10:38]jaap: but yeah seems to be a gap in the type system after adding the nice spreading of variants and coercing
[10:39]jaap: No it's local - in the example you see the module signature added, so it only happens if you make the type private, and then coerce it
[10:40]jaap: I guess there is some mechanism to mark members as constructed - and coercion is not doing that
[10:40]cristianoc: Ok this is enough discussion.
Paste it in a prompt and see if it gets close.
