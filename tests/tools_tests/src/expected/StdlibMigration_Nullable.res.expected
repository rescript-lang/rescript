let make1 = "hello"->Nullable.make
let make2 = Nullable.make("hello")

let null1 = Nullable.null
let undefined1 = Nullable.undefined

let isNullable1 = Nullable.null->Nullable.isNullable
let isNullable2 = Nullable.isNullable(Nullable.null)

let map1 = Nullable.make(2)->Nullable.map(x => x + 1)
let map2 = Nullable.map(Nullable.make(2), x => x + 1)

let forEach1 = Nullable.make(2)->Nullable.forEach(x => ignore(x))
let forEach2 = Nullable.forEach(Nullable.make(2), x => ignore(x))

let fromOption1 = Some("x")->Nullable.fromOption
let fromOption2 = Nullable.fromOption(None)

let from_opt1 = Some("y")->Nullable.fromOption
let from_opt2 = Nullable.fromOption(None)

let toOption1 = Nullable.make(3)->Nullable.toOption
let toOption2 = Nullable.toOption(Nullable.make(3))

let to_opt1 = Nullable.make(4)->Nullable.toOption
let to_opt2 = Nullable.toOption(Nullable.make(4))

let optArrayOfNullableToOptArrayOfOpt: option<array<Nullable.t<'a>>> => option<
  array<option<'a>>,
> = x =>
  switch x {
  | None => None
  | Some(arr) => Some(arr->Belt.Array.map(Nullable.toOption))
  }

