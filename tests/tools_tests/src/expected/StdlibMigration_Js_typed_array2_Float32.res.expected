let arr = Float32Array.fromArray([1.0, 2.0, 3.0])

let len1 = arr->TypedArray.length
let includes1 = arr->TypedArray.includes(2.0)
let idxFrom1 = arr->TypedArray.indexOfFrom(2.0, 1)

let slice1 = arr->TypedArray.slice(~start=1, ~end=2)
let sliceFrom1 = arr->TypedArray.sliceToEnd(~start=1)

let map1 = arr->TypedArray.map(x => x +. 1.0)
let reduce1 = arr->TypedArray.reduce((acc, x) => acc +. x, 0.0)

let bytes = Float32Array.Constants.bytesPerElement

let fromBufToEnd = Float32Array.fromBufferToEnd(ArrayBuffer.make(8), ~byteOffset=2)
let fromBufRange = Float32Array.fromBufferWithRange(ArrayBuffer.make(8), ~byteOffset=2, ~length=2)

let fromLength = Float32Array.fromLength(3)

