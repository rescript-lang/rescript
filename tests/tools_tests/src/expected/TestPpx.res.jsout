// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

let React = require("react");

console.log("ppx test");

console.log("ppx test");

let M = {
  v: 10
};

let OptionalFields = {
  r: {
    y: 1.0
  }
};

function one(x) {
  return x;
}

function two(x, y) {
  return x + y | 0;
}

let n = 6;

let Arity = {
  one: one,
  two: two,
  n: n
};

React.useState(() => 0);

async function fpromise(promise, _x) {
  return await promise;
}

let Uncurried = {};

async function async_succ(x) {
  return x + 1 | 0;
}

async function async_foo(x, y) {
  let a = async_succ(x);
  let b = async_succ(y);
  return await a + await b | 0;
}

function add(x, y) {
  return x + y | 0;
}

function partial_add(extra) {
  return 3 + extra | 0;
}

function plus(x, y) {
  return x + y | 0;
}

let z = 3;

let Pipe = {
  plus: plus,
  z: z
};

let concat = "ab";

async function test() {
  return 12;
}

async function f() {
  return await test() + 1 | 0;
}

let a = "A";

let b = "B";

let vv = 10;

let neq = false;

let neq2 = false;

let eq = true;

let eq2 = true;

exports.a = a;
exports.b = b;
exports.M = M;
exports.vv = vv;
exports.OptionalFields = OptionalFields;
exports.Arity = Arity;
exports.fpromise = fpromise;
exports.Uncurried = Uncurried;
exports.async_succ = async_succ;
exports.async_foo = async_foo;
exports.add = add;
exports.partial_add = partial_add;
exports.Pipe = Pipe;
exports.concat = concat;
exports.neq = neq;
exports.neq2 = neq2;
exports.eq = eq;
exports.eq2 = eq2;
exports.test = test;
exports.f = f;
/*  Not a pure module */
