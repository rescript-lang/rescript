// Use deprecated Error APIs to validate migration to JsError/JsExn

external someExn: exn = "whatever"

let fromExn1 = someExn->JsExn.fromException
let fromExn2 = JsExn.fromException(someExn)

let err = JsError.make("Some message here")

let stack1 = err->JsError.stack
let stack2 = JsError.stack(err)

let message1 = err->JsError.message
let message2 = JsError.message(err)

let name1 = err->JsError.name
let name2 = JsError.name(err)

let fileName1 = err->JsError.fileName
let fileName2 = JsError.fileName(err)

// Type alias migration
let errT: JsError.t = JsError.make("Another message")

// Sub-error constructors
let evalErr = JsError.EvalError.make("eval error")
let rangeErr = JsError.RangeError.make("range error")
let refErr = JsError.ReferenceError.make("reference error")
let synErr = JsError.SyntaxError.make("syntax error")
let typeErr = JsError.TypeError.make("type error")
let uriErr = JsError.URIError.make("uri error")

let ignore1 = err->JsError.ignore
let ignore2 = JsError.ignore(err)

