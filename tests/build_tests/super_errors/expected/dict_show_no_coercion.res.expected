
  [1;31mWe've found a bug for you![0m
  [36m/.../fixtures/dict_show_no_coercion.res[0m:[2m2:23-35[0m

  1 [2mâ”‚[0m // This should not show coercion suggestion since just the inner types a
    [2mâ”‚[0m re coercable, not the full type + expression (dict<float> -> dict<JSON.t
    [2mâ”‚[0m >)
  [1;31m2[0m [2mâ”‚[0m let x: dict<JSON.t> = [1;31mdict{"1": 1.}[0m
  3 [2mâ”‚[0m 

  This has type: [1;31mdict<float>[0m
  But it's expected to have type: [1;33mdict<JSON.t>[0m
  
  The incompatible parts:
    [1;31mfloat[0m vs [1;33mJSON.t[0m [2m(defined as[0m [1;33mJSON.t[0m[2m)[0m