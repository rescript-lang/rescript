// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";

async function willBeInlined() {
  return 3;
}

let inlined = willBeInlined();

function wrapSomethingAsync() {
  (async param => {
    let test = await Promise.resolve("Test");
    console.log(test);
  })(777);
}

function wrapSomethingAsync2() {
  (async () => {
    let test = await Promise.resolve("Test");
    console.log(test);
  })();
}

async function doSomethingAsync(someAsyncFunction) {
  return await someAsyncFunction();
}

let broken = doSomethingAsync;

let M = {
  broken: broken
};

async function broken$1(someAsyncFunction) {
  return await someAsyncFunction();
}

let broken$2 = broken$1;

function curriedId(x) {
  return x;
}

async function curriedIdAsync(x) {
  return x;
}

function uncurriedId(x) {
  return x;
}

async function uncurriedIdAsync(x) {
  return x;
}

let tci = 3;

let tcia = curriedIdAsync(3);

let tui = 3;

let tuia = uncurriedIdAsync(3);

function nested1() {
  return async y => await y;
}

async function nested2() {
  return async y => await y;
}

function onSubmit() {
  return React.useCallback(async b => await b);
}

export {
  willBeInlined,
  inlined,
  wrapSomethingAsync,
  wrapSomethingAsync2,
  M,
  broken$2 as broken,
  curriedId,
  curriedIdAsync,
  uncurriedId,
  uncurriedIdAsync,
  tci,
  tcia,
  tui,
  tuia,
  nested1,
  nested2,
  onSubmit,
}
/* inlined Not a pure module */
