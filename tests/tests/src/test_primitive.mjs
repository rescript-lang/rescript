// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Lazy from "rescript/lib/es6/Lazy.js";

function a4(prim) {
  return [
    "File \"test_primitive.res\", line 29, characters 9-19",
    prim
  ];
}

function a5(prim) {
  return [
    30,
    prim
  ];
}

function a6(prim) {
  return [
    [
      "test_primitive.res",
      31,
      9,
      19
    ],
    prim
  ];
}

let test_float = 3;

let test_abs = Math.abs(3.0);

let v = [
  1.0,
  2.0
];

let xxx = "a";

let a = xxx[0];

function u(b) {
  if (b) {
    console.log(1);
    return 32;
  } else {
    return 7;
  }
}

function f2(h, b, param) {
  return h(b ? 32 : 7);
}

v[1] = 3.0;

let unboxed_x = {
  u: 0,
  v: 0
};

function gg(x) {
  x.u = 0;
}

function f(x) {
  return x.length;
}

let is_lazy_force = Lazy.force;

function fib(n) {
  if (n === 0 || n === 1) {
    return 1;
  }
  let fib1 = fib(n - 1 | 0);
  let fib2 = fib(n - 2 | 0);
  return (fib1 + fib2 | 0) + 3 | 0;
}

let a0 = "File \"test_primitive.res\", line 25, characters 9-16";

let a1 = "Test_primitive";

let a2 = 27;

let a3 = "Test_primitive";

let xx = [
  0,
  0
];

export {
  a0,
  a1,
  a2,
  a3,
  a4,
  a5,
  a6,
  test_float,
  test_abs,
  v,
  xxx,
  a,
  u,
  f2,
  xx,
  unboxed_x,
  gg,
  f,
  is_lazy_force,
  fib,
}
/* test_abs Not a pure module */
