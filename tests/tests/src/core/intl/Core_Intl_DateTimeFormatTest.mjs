// Generated by ReScript, PLEASE EDIT WITH CARE


console.log("---");

console.log("Intl.DateTimeFormat");

Intl.DateTimeFormat.supportedLocalesOf([
  "en-US",
  "en-GB"
]);

Intl.DateTimeFormat.supportedLocalesOf([
  "en-US",
  "en-GB"
], {
  localeMatcher: "lookup"
});

let formatter = new Intl.DateTimeFormat(undefined, {
  dateStyle: "full",
  timeStyle: "full"
});

console.log(formatter.format(new Date(Date.now())));

console.log(formatter.formatRange(new Date(2023, 1, 1), new Date(2023, 12, 31)));

let options = {
  timeZone: "UTC",
  hour12: false,
  hourCycle: "h24",
  weekday: "narrow",
  era: "narrow",
  year: "2-digit",
  month: "2-digit",
  day: "2-digit",
  hour: "2-digit",
  minute: "2-digit",
  second: "2-digit",
  fractionalSecondDigits: 3,
  timeZoneName: "longGeneric"
};

let formatter$1 = new Intl.DateTimeFormat(undefined, options);

console.log(formatter$1.format(new Date(Date.now())));

let newrecord = {...options};

let formatter$2 = new Intl.DateTimeFormat(undefined, (newrecord.timeZoneName = "long", newrecord));

console.log(formatter$2.format(new Date(Date.now())));

let newrecord$1 = {...options};

let formatter$3 = new Intl.DateTimeFormat(undefined, (newrecord$1.timeZoneName = "longOffset", newrecord$1));

console.log(formatter$3.format(new Date(Date.now())));

let newrecord$2 = {...options};

let formatter$4 = new Intl.DateTimeFormat(undefined, (newrecord$2.timeZoneName = "short", newrecord$2));

console.log(formatter$4.format(new Date(Date.now())));

let newrecord$3 = {...options};

let formatter$5 = new Intl.DateTimeFormat(undefined, (newrecord$3.timeZoneName = "shortGeneric", newrecord$3));

console.log(formatter$5.format(new Date(Date.now())));

let newrecord$4 = {...options};

let formatter$6 = new Intl.DateTimeFormat(undefined, (newrecord$4.timeZoneName = "shortOffset", newrecord$4));

console.log(formatter$6.format(new Date(Date.now())));

let resolvedOptions = new Intl.DateTimeFormat().resolvedOptions();

let timeZone = resolvedOptions.timeZone;

export {
  options,
  formatter$6 as formatter,
  resolvedOptions,
  timeZone,
}
/*  Not a pure module */
