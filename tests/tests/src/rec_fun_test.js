// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

let Mt = require("./mt.js");
let Primitive_object = require("rescript/lib/js/primitive_object.js");

let suites = {
  contents: /* [] */0
};

let test_id = {
  contents: 0
};

function eq(loc, x, y) {
  test_id.contents = test_id.contents + 1 | 0;
  suites.contents = {
    hd: [
      loc + (" id " + test_id.contents.toString()),
      () => ({
        TAG: "Eq",
        _0: x,
        _1: y
      })
    ],
    tl: suites.contents
  };
}

let called = {
  contents: 0
};

function g() {
  let v = {};
  let next = (i, b) => {
    called.contents = called.contents + 1 | 0;
    if (b) {
      v.contents(i, false);
    }
    return i + 1 | 0;
  };
  Primitive_object.updateDummy(v, {
    contents: next
  });
  console.log(next(0, true).toString());
}

g();

let x = {};

let y = {};

Primitive_object.updateDummy(x, {
  hd: 1,
  tl: y
});

Primitive_object.updateDummy(y, {
  hd: 2,
  tl: x
});

eq("File \"rec_fun_test.res\", line 32, characters 3-10", called.contents, 2);

Mt.from_pair_suites("Rec_fun_test", suites.contents);

exports.suites = suites;
exports.test_id = test_id;
exports.eq = eq;
exports.called = called;
exports.g = g;
exports.x = x;
exports.y = y;
/*  Not a pure module */
