// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Mocha from "mocha";
import * as Test_utils from "./test_utils.mjs";
import * as Stdlib_Lazy from "@rescript/runtime/lib/es6/Stdlib_Lazy.js";

let u = {
  contents: 3
};

let v = Stdlib_Lazy.make(() => {
  u.contents = 32;
});

function lazy_test() {
  let h = u.contents;
  Stdlib_Lazy.get(v);
  let g = u.contents;
  return [
    h,
    g
  ];
}

let u_v = {
  contents: 0
};

let u$1 = Stdlib_Lazy.make(() => {
  u_v.contents = 2;
});

Stdlib_Lazy.get(u$1);

let exotic = Stdlib_Lazy.get;

let l_from_fun = Stdlib_Lazy.make(() => 3);

let forward_test = Stdlib_Lazy.make(() => {
  let u = 3;
  u = u + 1 | 0;
  return u;
});

let f005 = Stdlib_Lazy.make(() => 6);

let f006 = Stdlib_Lazy.make(() => (() => 3));

let f007 = Stdlib_Lazy.make(() => {
  throw {
    RE_EXN_ID: "Not_found",
    Error: new Error()
  };
});

let f008 = Stdlib_Lazy.make(() => {
  console.log("hi");
  throw {
    RE_EXN_ID: "Not_found",
    Error: new Error()
  };
});

let a2 = Stdlib_Lazy.from_val;

let a3 = Stdlib_Lazy.from_val(3);

let a4 = Stdlib_Lazy.from_val(3);

let a5 = Stdlib_Lazy.from_val(undefined);

let a6 = Stdlib_Lazy.from_val();

let a7 = Stdlib_Lazy.get(a5);

let a8 = Stdlib_Lazy.get(a6);

Mocha.describe("Lazy_test", () => {
  Mocha.test("simple", () => Test_utils.eq("File \"lazy_test.res\", line 72, characters 26-33", lazy_test(), [
    3,
    32
  ]));
  Mocha.test("lazy_force", () => Test_utils.eq("File \"lazy_test.res\", line 74, characters 30-37", u_v.contents, 2));
  Mocha.test("lazy_from_fun", () => Test_utils.eq("File \"lazy_test.res\", line 75, characters 33-40", Stdlib_Lazy.get(l_from_fun), 3));
  Mocha.test("lazy_from_val", () => Test_utils.eq("File \"lazy_test.res\", line 76, characters 33-40", Stdlib_Lazy.get(Stdlib_Lazy.from_val(3)), 3));
  Mocha.test("lazy_from_val2", () => Test_utils.eq("File \"lazy_test.res\", line 78, characters 7-14", Stdlib_Lazy.get(Stdlib_Lazy.get(Stdlib_Lazy.from_val(Stdlib_Lazy.make(() => 3)))), 3));
  Mocha.test("lazy_from_val3", () => {
    debugger;
    Test_utils.eq("File \"lazy_test.res\", line 82, characters 6-13", Stdlib_Lazy.get(Stdlib_Lazy.get(Stdlib_Lazy.make(() => forward_test))), 4);
  });
  Mocha.test("lazy_test.res", () => Test_utils.eq("File \"lazy_test.res\", line 90, characters 26-33", a3, a4));
  Mocha.test("lazy_test.res", () => Test_utils.eq("File \"lazy_test.res\", line 91, characters 26-33", a7, undefined));
  Mocha.test("lazy_test.res", () => Test_utils.eq("File \"lazy_test.res\", line 92, characters 26-33", a8, undefined));
  Mocha.test("File \"lazy_test.res\", line 93, characters 7-14", () => Test_utils.ok("File \"lazy_test.res\", line 93, characters 25-32", Stdlib_Lazy.isEvaluated(Stdlib_Lazy.from_val(3))));
  Mocha.test("File \"lazy_test.res\", line 94, characters 7-14", () => Test_utils.ok("File \"lazy_test.res\", line 94, characters 25-32", !Stdlib_Lazy.isEvaluated(Stdlib_Lazy.make(() => {
    throw {
      RE_EXN_ID: "Not_found",
      Error: new Error()
    };
  }))));
});

export {
  v,
  lazy_test,
  u_v,
  u$1 as u,
  exotic,
  l_from_fun,
  forward_test,
  f005,
  f006,
  f007,
  f008,
  a2,
  a3,
  a4,
  a5,
  a6,
  a7,
  a8,
}
/* v Not a pure module */
