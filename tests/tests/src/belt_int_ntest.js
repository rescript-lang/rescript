// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

let Belt_Int = require("rescript/lib/js/belt_Int.js");
let Nodetest = require("node:test");
let Node_test_util = require("./node_test_util.js");

Nodetest.describe("Belt.Int", () => {
  Nodetest.test("toFloat", () => {
    Node_test_util.eq("File \"belt_int_ntest.res\", line 8, characters 7-14", 1, 1.0);
    Node_test_util.eq("File \"belt_int_ntest.res\", line 9, characters 7-14", -1, -1.0);
  });
  Nodetest.test("fromFloat", () => {
    Node_test_util.eq("File \"belt_int_ntest.res\", line 13, characters 7-14", 1, 1);
    Node_test_util.eq("File \"belt_int_ntest.res\", line 14, characters 7-14", 1, 1);
    Node_test_util.eq("File \"belt_int_ntest.res\", line 15, characters 7-14", 1, 1);
    Node_test_util.eq("File \"belt_int_ntest.res\", line 16, characters 7-14", -1, -1);
    Node_test_util.eq("File \"belt_int_ntest.res\", line 17, characters 7-14", -1, -1);
    Node_test_util.eq("File \"belt_int_ntest.res\", line 18, characters 7-14", -1, -1);
  });
  Nodetest.test("fromString", () => {
    Node_test_util.eq("File \"belt_int_ntest.res\", line 22, characters 7-14", Belt_Int.fromString("1"), 1);
    Node_test_util.eq("File \"belt_int_ntest.res\", line 23, characters 7-14", Belt_Int.fromString("-1"), -1);
    Node_test_util.eq("File \"belt_int_ntest.res\", line 24, characters 7-14", Belt_Int.fromString("1.7"), 1);
    Node_test_util.eq("File \"belt_int_ntest.res\", line 25, characters 7-14", Belt_Int.fromString("-1.0"), -1);
    Node_test_util.eq("File \"belt_int_ntest.res\", line 26, characters 7-14", Belt_Int.fromString("-1.5"), -1);
    Node_test_util.eq("File \"belt_int_ntest.res\", line 27, characters 7-14", Belt_Int.fromString("-1.7"), -1);
    Node_test_util.eq("File \"belt_int_ntest.res\", line 28, characters 7-14", Belt_Int.fromString("not an int"), undefined);
  });
  Nodetest.test("toString", () => {
    Node_test_util.eq("File \"belt_int_ntest.res\", line 32, characters 7-14", String(1), "1");
    Node_test_util.eq("File \"belt_int_ntest.res\", line 33, characters 7-14", String(-1), "-1");
  });
  Nodetest.test("operators", () => {
    Node_test_util.eq("File \"belt_int_ntest.res\", line 39, characters 7-14", 5, 5);
    Node_test_util.eq("File \"belt_int_ntest.res\", line 40, characters 7-14", -1, -1);
    Node_test_util.eq("File \"belt_int_ntest.res\", line 41, characters 7-14", 6, 6);
    Node_test_util.eq("File \"belt_int_ntest.res\", line 42, characters 7-14", 0, 0);
  });
});

let I;

exports.I = I;
/*  Not a pure module */
