// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Mocha from "mocha";
import * as Test_utils from "./test_utils.mjs";
import * as Primitive_int from "@rescript/runtime/lib/es6/Primitive_int.js";
import * as Primitive_object from "@rescript/runtime/lib/es6/Primitive_object.js";

function f(x, y) {
  return Primitive_int.compare(x + y | 0, y + x | 0);
}

function f2(x, y) {
  return Primitive_int.compare(x + y | 0, y);
}

let f3 = Primitive_int.compare;

let f4 = Primitive_int.min;

let f5_min = Primitive_object.min;

let f5_max = Primitive_object.max;

Mocha.describe("Bs_min_max_test", () => {
  Mocha.test("min/max operations with options", () => {
    Test_utils.eq("File \"bs_min_max_test.res\", line 17, characters 7-14", Primitive_object.min(undefined, 3), undefined);
    Test_utils.eq("File \"bs_min_max_test.res\", line 18, characters 7-14", Primitive_object.min(3, undefined), undefined);
    Test_utils.eq("File \"bs_min_max_test.res\", line 19, characters 7-14", Primitive_object.max(3, undefined), 3);
    Test_utils.eq("File \"bs_min_max_test.res\", line 20, characters 7-14", Primitive_object.max(undefined, 3), 3);
    Test_utils.ok("File \"bs_min_max_test.res\", line 21, characters 7-14", Primitive_object.greaterequal(5, undefined));
    Test_utils.ok("File \"bs_min_max_test.res\", line 22, characters 7-14", Primitive_object.lessequal(undefined, 5));
    Test_utils.ok("File \"bs_min_max_test.res\", line 23, characters 7-14", true);
    Test_utils.ok("File \"bs_min_max_test.res\", line 24, characters 7-14", true);
  });
});

export {
  f,
  f2,
  f3,
  f4,
  f5_min,
  f5_max,
}
/*  Not a pure module */
