// Generated by ReScript, PLEASE EDIT WITH CARE


function O(X) {
  let cow = x => X.foo(x);
  let sheep = x => 1 + X.foo(x) | 0;
  return {
    cow: cow,
    sheep: sheep
  };
}

function F(X) {
  return Y => {
    let cow = x => Y.foo(X.foo(x));
    let sheep = x => 1 + Y.foo(X.foo(x)) | 0;
    return {
      cow: cow,
      sheep: sheep
    };
  };
}

function F1(X) {
  return Y => {
    let sheep = x => 1 + Y.foo(X.foo(x)) | 0;
    return {
      sheep: sheep
    };
  };
}

function F2(X) {
  return Y => {
    let sheep = x => 1 + Y.foo(X.foo(x)) | 0;
    return {
      sheep: sheep
    };
  };
}

let M = {
  F: (funarg, funarg$1) => {
    let Y = {
      foo: funarg$1.foo
    };
    let cow = x => Y.foo(funarg.foo(x));
    let sheep = x => 1 + cow(x) | 0;
    return {
      sheep: sheep
    };
  }
};

export {
  O,
  F,
  F1,
  F2,
  M,
}
/* No side effect */
