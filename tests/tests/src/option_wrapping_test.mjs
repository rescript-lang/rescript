// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Stdlib_Lazy from "@rescript/runtime/lib/es6/Stdlib_Lazy.js";
import * as Primitive_option from "@rescript/runtime/lib/es6/Primitive_option.js";
import * as Stdlib_AsyncIterator from "@rescript/runtime/lib/es6/Stdlib_AsyncIterator.js";

let x6 = {
  x: 42
};

let x7 = [
  1,
  2,
  3
];

let x8 = () => {};

let x10 = null;

let x11 = Primitive_option.some(undefined);

let x20 = null;

let x21 = new Date();

let x22 = /test/;

let x23 = new Map();

let x24 = new Set();

let x25 = new WeakMap();

let x26 = new WeakSet();

let x27 = new Float32Array([1.0]);

let x28 = Symbol("");

let x29 = new Error("");

let x30 = new ArrayBuffer(0);

let x31 = new DataView(new ArrayBuffer(0));

let x32 = new Map().values();

let x33 = Stdlib_AsyncIterator.make(() => Promise.resolve(Stdlib_AsyncIterator.value(true)));

let x34 = new Intl.ListFormat();

let x35 = new Intl.Segmenter();

let x36 = new Intl.Segmenter().segment("");

let x37 = new Intl.DateTimeFormat();

let x38 = new Intl.NumberFormat();

let x39 = true;

let x40 = new Intl.Collator();

let x41 = new Intl.RelativeTimeFormat();

let x42 = new Intl.PluralRules();

let x43 = new Intl.Locale("en");

let x45 = Promise.resolve(true);

let x47 = {};

let x48 = Stdlib_Lazy.make(() => true);

let x1 = "hello";

let x2 = 1;

let x3 = {
  TAG: "Ok",
  _0: "hi"
};

let x4 = "polyvar";

let x5 = {
  x: 42
};

let x12 = "test";

let x44 = [
  1,
  2
];

let x46 = /* [] */0;

export {
  x1,
  x2,
  x3,
  x4,
  x5,
  x6,
  x7,
  x8,
  x10,
  x11,
  x12,
  x20,
  x21,
  x22,
  x23,
  x24,
  x25,
  x26,
  x27,
  x28,
  x29,
  x30,
  x31,
  x32,
  x33,
  x34,
  x35,
  x36,
  x37,
  x38,
  x39,
  x40,
  x41,
  x42,
  x43,
  x44,
  x45,
  x46,
  x47,
  x48,
}
/* x20 Not a pure module */
