// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Mocha from "mocha";
import * as Test_utils from "./test_utils.mjs";
import * as Js_undefined from "@rescript/runtime/lib/es6/Js_undefined.js";
import * as Primitive_option from "@rescript/runtime/lib/es6/Primitive_option.js";

function f1(x) {
  if (x !== null) {
    return x + 1 | 0;
  } else {
    return 3;
  }
}

function f2(x) {
  if (x !== null) {
    return x + 1 | 0;
  } else {
    return 3;
  }
}

function f5(h, x) {
  let u = h(32);
  if (u !== null) {
    return u + 1 | 0;
  } else {
    return 3;
  }
}

function f4(h, x) {
  let u = h(32);
  let v = 32 + x | 0;
  if (u !== null) {
    return u + 1 | 0;
  } else {
    return 1 + v | 0;
  }
}

function f6(x, y) {
  return x === y;
}

function f7(x) {
  return x;
}

function f8(x) {
  if (x !== null) {
    if (x !== null) {
      return 0;
    } else {
      return 1;
    }
  } else {
    return 2;
  }
}

let u = f8(undefined);

function f9(x) {
  if (x === null) {
    return;
  } else {
    return Primitive_option.some(x);
  }
}

function f10(x) {
  return x === null;
}

let f11 = false;

let Test_null = {
  f1: f1,
  f2: f2,
  f5: f5,
  f4: f4,
  f6: f6,
  f7: f7,
  f8: f8,
  u: u,
  f9: f9,
  f10: f10,
  f11: f11
};

function f1$1(x) {
  let x$1 = Js_undefined.toOption(x);
  if (x$1 !== undefined) {
    return x$1 + 1 | 0;
  } else {
    return 3;
  }
}

function f2$1(x) {
  let u = Js_undefined.toOption(x);
  if (u !== undefined) {
    return u + 1 | 0;
  } else {
    return 3;
  }
}

function f5$1(h, x) {
  let u = Js_undefined.toOption(h(32));
  if (u !== undefined) {
    return u + 1 | 0;
  } else {
    return 3;
  }
}

function f4$1(h, x) {
  let u = Js_undefined.toOption(h(32));
  let v = 32 + x | 0;
  if (u !== undefined) {
    return u + 1 | 0;
  } else {
    return 1 + v | 0;
  }
}

function f6$1(x, y) {
  return x === y;
}

function f7$1(x) {
  return x;
}

function f8$1(x) {
  let x$1 = Js_undefined.toOption(x);
  if (x$1 === undefined) {
    return 2;
  }
  let match = Js_undefined.toOption(Primitive_option.valFromOption(x$1));
  if (match !== undefined) {
    return 0;
  } else {
    return 1;
  }
}

let u$1 = f8$1(undefined);

let f9$1 = Js_undefined.toOption;

function f10$1(x) {
  return x === undefined;
}

let f11$1 = false;

let Test_def = {
  f1: f1$1,
  f2: f2$1,
  f5: f5$1,
  f4: f4$1,
  f6: f6$1,
  f7: f7$1,
  f8: f8$1,
  u: u$1,
  f9: f9$1,
  f10: f10$1,
  f11: f11$1
};

function f1$2(x) {
  if (x == null) {
    return 3;
  } else {
    return x + 1 | 0;
  }
}

function f2$2(x) {
  if (x == null) {
    return 3;
  } else {
    return x + 1 | 0;
  }
}

function f5$2(h, x) {
  let u = h(32);
  if (u == null) {
    return 3;
  } else {
    return u + 1 | 0;
  }
}

function f4$2(h, x) {
  let u = h(32);
  let v = 32 + x | 0;
  if (u == null) {
    return 1 + v | 0;
  } else {
    return u + 1 | 0;
  }
}

function f6$2(x, y) {
  return x === y;
}

function f7$2(x) {
  return x;
}

function f8$2(x) {
  if (x == null) {
    return 2;
  } else if (x == null) {
    return 1;
  } else {
    return 0;
  }
}

let u$2 = f8$2(undefined);

function f9$2(x) {
  if (x == null) {
    return;
  } else {
    return Primitive_option.some(x);
  }
}

function f10$2(x) {
  return x == null;
}

let f11$2 = false;

let Test_null_def = {
  f1: f1$2,
  f2: f2$2,
  f5: f5$2,
  f4: f4$2,
  f6: f6$2,
  f7: f7$2,
  f8: f8$2,
  u: u$2,
  f9: f9$2,
  f10: f10$2,
  f11: f11$2
};

Mocha.describe("Test_zero_nullable", () => {
  Mocha.test("Test_null_def.f1 with return(0)", () => Test_utils.eq("File \"test_zero_nullable.res\", line 240, characters 7-14", f1$2(0), 1));
  Mocha.test("Test_null_def.f1 with null", () => Test_utils.eq("File \"test_zero_nullable.res\", line 242, characters 46-53", f1$2(null), 3));
  Mocha.test("Test_null_def.f1 with undefined", () => Test_utils.eq("File \"test_zero_nullable.res\", line 243, characters 51-58", f1$2(undefined), 3));
  Mocha.test("Test_null.f1 with return(0)", () => Test_utils.eq("File \"test_zero_nullable.res\", line 245, characters 47-54", f1(0), 1));
  Mocha.test("Test_null.f1 with null", () => Test_utils.eq("File \"test_zero_nullable.res\", line 246, characters 42-49", f1(null), 3));
  Mocha.test("Test_def.f1 with return(0)", () => Test_utils.eq("File \"test_zero_nullable.res\", line 248, characters 46-53", f1$1(0), 1));
  Mocha.test("Test_def.f1 with undefined", () => Test_utils.eq("File \"test_zero_nullable.res\", line 249, characters 46-53", f1$1(undefined), 3));
});

let a = null;

let res = a !== undefined;

let Null_undefined_neq = {
  a: a,
  b: undefined,
  res: res
};

export {
  Test_null,
  Test_def,
  Test_null_def,
  Null_undefined_neq,
}
/* u Not a pure module */
