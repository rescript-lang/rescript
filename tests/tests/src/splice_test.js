// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

let Mt = require("./mt.js");
let Belt_Array = require("rescript/lib/js/belt_Array.js");

let suites = {
  contents: /* [] */0
};

let test_id = {
  contents: 0
};

function eq(loc, x, y) {
  Mt.eq_suites(test_id, suites, loc, x, y);
}

let Caml_splice_call = {};

Math.max(1);

function f00(a, b) {
  return a.send(b);
}

let a = [];

a.push(1, 2, 3, 4);

eq("File \"splice_test.res\", line 25, characters 5-12", a, [
  1,
  2,
  3,
  4
]);

function dynamic(arr) {
  let a = [];
  a.push(1, ...arr);
  eq("File \"splice_test.res\", line 31, characters 5-12", a, Belt_Array.concatMany([
    [1],
    arr
  ]));
}

dynamic([
  2,
  3,
  4
]);

dynamic([]);

dynamic([
  1,
  1,
  3
]);

let a$1 = new Array(1, 2, 3, 4);

eq("File \"splice_test.res\", line 46, characters 5-12", a$1, [
  1,
  2,
  3,
  4
]);

function dynamicNew(arr) {
  let a = new Array(1, 2, ...arr);
  eq("File \"splice_test.res\", line 51, characters 5-12", a, Belt_Array.concatMany([
    [
      1,
      2
    ],
    arr
  ]));
}

dynamicNew([
  3,
  4
]);

dynamicNew([]);

dynamicNew([
  1,
  3
]);

class Foo {
  constructor(...names) {
    this.names = names;
  }
}
;

let f = new Foo("a", "b", "c");

eq("File \"splice_test.res\", line 73, characters 5-12", f.names, [
  "a",
  "b",
  "c"
]);

function dynamicFoo(arr) {
  let f = new Foo(...arr);
  eq("File \"splice_test.res\", line 78, characters 5-12", f.names, arr);
}

dynamicFoo([]);

dynamicFoo(["a"]);

dynamicFoo([
  "a",
  "b",
  "c"
]);

let a$2 = [];

a$2.push(1, 2, 3, 4);

eq("File \"splice_test.res\", line 95, characters 7-14", a$2, [
  1,
  2,
  3,
  4
]);

function dynamic$1(arr) {
  let a = [];
  a.push(1, ...arr);
  eq("File \"splice_test.res\", line 101, characters 7-14", a, Belt_Array.concatMany([
    [1],
    arr
  ]));
}

dynamic$1([
  2,
  3,
  4
]);

dynamic$1([]);

dynamic$1([
  1,
  1,
  3
]);

let Pipe = {
  dynamic: dynamic$1
};

function f1(c) {
  return Math.max(1, ...c);
}

eq("File \"splice_test.res\", line 111, characters 3-10", Math.max(1, 2, 3), 3);

eq("File \"splice_test.res\", line 112, characters 3-10", Math.max(1), 1);

eq("File \"splice_test.res\", line 113, characters 3-10", Math.max(1, 1, 2, 3, 4, 5, 2, 3), 5);

Mt.from_pair_suites("splice_test.res", suites.contents);

exports.suites = suites;
exports.test_id = test_id;
exports.eq = eq;
exports.Caml_splice_call = Caml_splice_call;
exports.f00 = f00;
exports.dynamic = dynamic;
exports.dynamicNew = dynamicNew;
exports.dynamicFoo = dynamicFoo;
exports.Pipe = Pipe;
exports.f1 = f1;
/*  Not a pure module */
