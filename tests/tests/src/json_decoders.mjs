// Generated by ReScript, PLEASE EDIT WITH CARE

import * as $$Array from "rescript/lib/es6/Array.js";

function decodeUser(json) {
  if (json === null) {
    return;
  }
  if (!(typeof json === "object" && !Array.isArray(json))) {
    return;
  }
  let match = json.id;
  if (match === undefined) {
    return;
  }
  if (match === null) {
    return;
  }
  if (typeof match !== "string") {
    return;
  }
  let match$1 = json.name;
  if (match$1 === undefined) {
    return;
  }
  if (match$1 === null) {
    return;
  }
  if (typeof match$1 !== "string") {
    return;
  }
  let match$2 = json.age;
  if (match$2 === undefined) {
    return;
  }
  if (match$2 === null) {
    return;
  }
  if (typeof match$2 !== "number") {
    return;
  }
  let email = json.email;
  let tmp;
  tmp = email !== undefined && !(email === null || typeof email !== "string") ? email : undefined;
  return {
    id: match,
    name: match$1,
    age: match$2 | 0,
    email: tmp
  };
}

function decodeGroup(json) {
  if (json === null) {
    return;
  }
  if (!(typeof json === "object" && !Array.isArray(json))) {
    return;
  }
  let match = json.id;
  if (match === undefined) {
    return;
  }
  if (match === null) {
    return;
  }
  if (typeof match !== "string") {
    return;
  }
  let match$1 = json.name;
  if (match$1 === undefined) {
    return;
  }
  if (match$1 === null) {
    return;
  }
  if (typeof match$1 !== "string") {
    return;
  }
  let match$2 = json.users;
  if (match$2 !== undefined && !(match$2 === null || !Array.isArray(match$2))) {
    return {
      id: match,
      name: match$1,
      users: $$Array.filterMap(match$2, decodeUser)
    };
  }
  
}

export {
  decodeUser,
  decodeGroup,
}
/* No side effect */
