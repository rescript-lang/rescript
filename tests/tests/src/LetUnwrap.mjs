// Generated by ReScript, PLEASE EDIT WITH CARE


function doStuffWithResult(s) {
  if (s === "s") {
    return {
      TAG: "Ok",
      _0: "hello"
    };
  } else {
    return {
      TAG: "Error",
      _0: "InvalidString"
    };
  }
}

function doNextStuffWithResult(s) {
  if (s === "s") {
    return {
      TAG: "Ok",
      _0: "hello"
    };
  } else {
    return {
      TAG: "Error",
      _0: "InvalidNext"
    };
  }
}

function getXWithResult(s) {
  let e = doStuffWithResult(s);
  if (e.TAG !== "Ok") {
    return {
      TAG: "Error",
      _0: e._0
    };
  }
  let y = e._0;
  let e$1 = doNextStuffWithResult(y);
  if (e$1.TAG === "Ok") {
    return {
      TAG: "Ok",
      _0: e$1._0 + y
    };
  } else {
    return {
      TAG: "Error",
      _0: e$1._0
    };
  }
}

let x = getXWithResult("s");

let someResult;

someResult = x.TAG === "Ok" ? x._0 : (
    x._0 === "InvalidNext" ? "nope!" : "nope"
  );

function doStuffWithOption(s) {
  if (s === "s") {
    return "hello";
  }
  
}

function doNextStuffWithOption(s) {
  if (s === "s") {
    return "hello";
  }
  
}

function getXWithOption(s) {
  let y = doStuffWithOption(s);
  if (y === undefined) {
    return;
  }
  let x = doNextStuffWithOption(y);
  if (x !== undefined) {
    return x + y;
  }
  
}

let x$1 = getXWithOption("s");

let someOption = x$1 !== undefined ? x$1 : "nope";

async function doStuffResultAsync(s) {
  if (s === "s") {
    return {
      TAG: "Ok",
      _0: {
        s: "hello"
      }
    };
  } else {
    return {
      TAG: "Error",
      _0: "FetchError"
    };
  }
}

async function decodeResAsync(res) {
  let match = res.s;
  if (match === "s") {
    return {
      TAG: "Ok",
      _0: res.s
    };
  } else {
    return {
      TAG: "Error",
      _0: "DecodeError"
    };
  }
}

async function getXWithResultAsync(s) {
  let e = await doStuffResultAsync(s);
  if (e.TAG !== "Ok") {
    return {
      TAG: "Error",
      _0: e._0
    };
  }
  let res = e._0;
  console.log(res.s);
  let e$1 = await decodeResAsync(res);
  if (e$1.TAG === "Ok") {
    return {
      TAG: "Ok",
      _0: e$1._0
    };
  } else {
    return {
      TAG: "Error",
      _0: e$1._0
    };
  }
}

export {
  doStuffWithResult,
  doNextStuffWithResult,
  getXWithResult,
  someResult,
  doStuffWithOption,
  doNextStuffWithOption,
  getXWithOption,
  someOption,
  doStuffResultAsync,
  decodeResAsync,
  getXWithResultAsync,
}
/* x Not a pure module */
