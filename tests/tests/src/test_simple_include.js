// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

let Belt_Array = require("rescript/lib/js/belt_Array.js");

let v = {
  contents: 32
};

v.contents = 0;

let N = {
  a: 3,
  v: v
};

let v$1 = {
  contents: 32
};

let NN = {
  a: 3,
  v: v$1
};

let get = Belt_Array.get;

let getExn = Belt_Array.getExn;

let set = Belt_Array.set;

let setExn = Belt_Array.setExn;

let shuffleInPlace = Belt_Array.shuffleInPlace;

let shuffle = Belt_Array.shuffle;

let reverseInPlace = Belt_Array.reverseInPlace;

let reverse = Belt_Array.reverse;

let make = Belt_Array.make;

let range = Belt_Array.range;

let rangeBy = Belt_Array.rangeBy;

let makeByU = Belt_Array.makeByU;

let makeBy = Belt_Array.makeBy;

let makeByAndShuffleU = Belt_Array.makeByAndShuffleU;

let makeByAndShuffle = Belt_Array.makeByAndShuffle;

let zip = Belt_Array.zip;

let zipByU = Belt_Array.zipByU;

let zipBy = Belt_Array.zipBy;

let unzip = Belt_Array.unzip;

let concat = Belt_Array.concat;

let concatMany = Belt_Array.concatMany;

let slice = Belt_Array.slice;

let sliceToEnd = Belt_Array.sliceToEnd;

let fill = Belt_Array.fill;

let blit = Belt_Array.blit;

let blitUnsafe = Belt_Array.blitUnsafe;

let forEachU = Belt_Array.forEachU;

let forEach = Belt_Array.forEach;

let mapU = Belt_Array.mapU;

let map = Belt_Array.map;

let flatMapU = Belt_Array.flatMapU;

let flatMap = Belt_Array.flatMap;

let getByU = Belt_Array.getByU;

let getBy = Belt_Array.getBy;

let getIndexByU = Belt_Array.getIndexByU;

let getIndexBy = Belt_Array.getIndexBy;

let keepU = Belt_Array.keepU;

let keep = Belt_Array.keep;

let keepWithIndexU = Belt_Array.keepWithIndexU;

let keepWithIndex = Belt_Array.keepWithIndex;

let keepMapU = Belt_Array.keepMapU;

let keepMap = Belt_Array.keepMap;

let forEachWithIndexU = Belt_Array.forEachWithIndexU;

let forEachWithIndex = Belt_Array.forEachWithIndex;

let mapWithIndexU = Belt_Array.mapWithIndexU;

let mapWithIndex = Belt_Array.mapWithIndex;

let partitionU = Belt_Array.partitionU;

let partition = Belt_Array.partition;

let reduceU = Belt_Array.reduceU;

let reduce = Belt_Array.reduce;

let reduceReverseU = Belt_Array.reduceReverseU;

let reduceReverse = Belt_Array.reduceReverse;

let reduceReverse2U = Belt_Array.reduceReverse2U;

let reduceReverse2 = Belt_Array.reduceReverse2;

let reduceWithIndexU = Belt_Array.reduceWithIndexU;

let reduceWithIndex = Belt_Array.reduceWithIndex;

let joinWithU = Belt_Array.joinWithU;

let joinWith = Belt_Array.joinWith;

let someU = Belt_Array.someU;

let some = Belt_Array.some;

let everyU = Belt_Array.everyU;

let every = Belt_Array.every;

let every2U = Belt_Array.every2U;

let every2 = Belt_Array.every2;

let some2U = Belt_Array.some2U;

let some2 = Belt_Array.some2;

let cmpU = Belt_Array.cmpU;

let cmp = Belt_Array.cmp;

let eqU = Belt_Array.eqU;

let eq = Belt_Array.eq;

let initU = Belt_Array.initU;

let init = Belt_Array.init;

let a = 3;

exports.get = get;
exports.getExn = getExn;
exports.set = set;
exports.setExn = setExn;
exports.shuffleInPlace = shuffleInPlace;
exports.shuffle = shuffle;
exports.reverseInPlace = reverseInPlace;
exports.reverse = reverse;
exports.make = make;
exports.range = range;
exports.rangeBy = rangeBy;
exports.makeByU = makeByU;
exports.makeBy = makeBy;
exports.makeByAndShuffleU = makeByAndShuffleU;
exports.makeByAndShuffle = makeByAndShuffle;
exports.zip = zip;
exports.zipByU = zipByU;
exports.zipBy = zipBy;
exports.unzip = unzip;
exports.concat = concat;
exports.concatMany = concatMany;
exports.slice = slice;
exports.sliceToEnd = sliceToEnd;
exports.fill = fill;
exports.blit = blit;
exports.blitUnsafe = blitUnsafe;
exports.forEachU = forEachU;
exports.forEach = forEach;
exports.mapU = mapU;
exports.map = map;
exports.flatMapU = flatMapU;
exports.flatMap = flatMap;
exports.getByU = getByU;
exports.getBy = getBy;
exports.getIndexByU = getIndexByU;
exports.getIndexBy = getIndexBy;
exports.keepU = keepU;
exports.keep = keep;
exports.keepWithIndexU = keepWithIndexU;
exports.keepWithIndex = keepWithIndex;
exports.keepMapU = keepMapU;
exports.keepMap = keepMap;
exports.forEachWithIndexU = forEachWithIndexU;
exports.forEachWithIndex = forEachWithIndex;
exports.mapWithIndexU = mapWithIndexU;
exports.mapWithIndex = mapWithIndex;
exports.partitionU = partitionU;
exports.partition = partition;
exports.reduceU = reduceU;
exports.reduce = reduce;
exports.reduceReverseU = reduceReverseU;
exports.reduceReverse = reduceReverse;
exports.reduceReverse2U = reduceReverse2U;
exports.reduceReverse2 = reduceReverse2;
exports.reduceWithIndexU = reduceWithIndexU;
exports.reduceWithIndex = reduceWithIndex;
exports.joinWithU = joinWithU;
exports.joinWith = joinWith;
exports.someU = someU;
exports.some = some;
exports.everyU = everyU;
exports.every = every;
exports.every2U = every2U;
exports.every2 = every2;
exports.some2U = some2U;
exports.some2 = some2;
exports.cmpU = cmpU;
exports.cmp = cmp;
exports.eqU = eqU;
exports.eq = eq;
exports.initU = initU;
exports.init = init;
exports.N = N;
exports.NN = NN;
exports.a = a;
exports.v = v;
/*  Not a pure module */
