// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Mocha from "mocha";
import * as Test_utils from "./test_utils.mjs";
import * as Primitive_array from "@rescript/runtime/lib/es6/Primitive_array.js";

let v = [
  1,
  2,
  3,
  3
];

function f(v) {
  let x = v.pop();
  if (x !== undefined) {
    console.log("hi");
  } else {
    console.log("hi2");
  }
  console.log((v.pop(), undefined));
}

function fff(x) {
  return true;
}

function fff2(x) {
  if (x.length >= 10) {
    console.log("hi");
    return;
  }
  
}

function fff3(x) {
  return 1;
}

function fff4(x) {
  if (x.length !== 0) {
    return 1;
  } else {
    return 2;
  }
}

Mocha.describe("Array_subtle_test", () => {
  Mocha.test("array_length_test", () => {
    let v = [
      1,
      2,
      3,
      3
    ];
    Test_utils.eq("File \"array_subtle_test.res\", line 40, characters 7-14", 4, v.length);
  });
  Mocha.test("array_push_test", () => {
    let v = [
      1,
      2,
      3,
      3
    ];
    Test_utils.eq("File \"array_subtle_test.res\", line 45, characters 7-14", 5, v.push(3));
    Test_utils.eq("File \"array_subtle_test.res\", line 46, characters 7-14", 5, v.length);
    Test_utils.eq("File \"array_subtle_test.res\", line 47, characters 7-14", 5, v.length);
  });
  Mocha.test("array_mutation_test", () => {
    let v = [
      1,
      2,
      3,
      3
    ];
    Test_utils.eq("File \"array_subtle_test.res\", line 52, characters 7-14", 3, Primitive_array.get(v, 2));
    Primitive_array.set(v, 2, 4);
    Test_utils.eq("File \"array_subtle_test.res\", line 54, characters 7-14", 4, Primitive_array.get(v, 2));
  });
  Mocha.test("array_pop_test", () => {
    let v = [
      1,
      2,
      3,
      3
    ];
    while (v.length > 0) {
      v.pop();
    };
    Test_utils.eq("File \"array_subtle_test.res\", line 62, characters 7-14", 0, v.length);
  });
  Mocha.test("array_function_tests", () => {
    Test_utils.eq("File \"array_subtle_test.res\", line 66, characters 7-14", 1, fff3([]));
    Test_utils.eq("File \"array_subtle_test.res\", line 67, characters 7-14", 2, fff4([]));
    Test_utils.eq("File \"array_subtle_test.res\", line 68, characters 7-14", 1, fff4([1]));
  });
});

let $$Array;

export {
  $$Array,
  v,
  f,
  fff,
  fff2,
  fff3,
  fff4,
}
/*  Not a pure module */
