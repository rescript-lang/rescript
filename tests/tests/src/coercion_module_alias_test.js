// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

let Char = require("rescript/lib/js/char.js");
let Belt_List = require("rescript/lib/js/belt_List.js");

function l(prim) {
  console.log(prim);
}

let C$p = Char;

console.log(66);

console.log(66);

let C3 = Char;

console.log(66);

let f = Belt_List.length;

function g(x) {
  return Belt_List.length(Belt_List.map(x, prim => prim + 1 | 0));
}

function F(X) {
  return Char;
}

let C4 = Char;

console.log(66);

function G(X) {
  return X;
}

let M = {};

let N = {
  x: 1
};

let N$p;

let M$p = {
  N: N,
  N$p: N$p
};

console.log(1);

let M$p$p = {
  N$p: N
};

console.log(M$p$p.N$p.x);

let M2 = {
  N: N,
  N$p: N$p
};

let M3 = {
  N$p: N
};

console.log(1);

let M3$p = {
  N$p: N
};

console.log(M3$p.N$p.x);

let N$1 = {
  x: 1
};

let M4 = {
  N$p: N$1
};

console.log(1);

function F0(X) {
  let N = {
    x: 1
  };
  return {
    N: N,
    N$p: undefined
  };
}

let N$2 = {
  x: 1
};

let M5 = {
  N$p: N$2
};

console.log(M5.N$p.x);

let D = {
  y: 3
};

let N$3 = {
  x: 1
};

let N$p$1;

let M6 = {
  D: D,
  N: N$3,
  N$p: N$p$1
};

console.log(1);

let M7 = {
  N$p: N$3
};

console.log(M7.N$p.x);

console.log(1);

let C$p$1;

let M8 = {
  C: undefined,
  C$p: C$p$1
};

let M9_C = {
  chr: prim => prim
};

let M9 = {
  C: M9_C,
  C$p: C$p$1
};

let prim = M9_C.chr(66);

console.log(prim);

let M10 = {
  C$p: {
    chr: prim => prim
  }
};

let prim$1 = M10.C$p.chr(66);

console.log(prim$1);

let C;

let C$p$p$p = C$p;

let C$p$p = Char;

function G0(funarg) {
  let N = {
    x: 1
  };
  return {
    N$p: N
  };
}

let M1 = {
  N: N$3,
  N$p: N$p$1
};

exports.l = l;
exports.C = C;
exports.C$p = C$p;
exports.C$p$p$p = C$p$p$p;
exports.C$p$p = C$p$p;
exports.C3 = C3;
exports.f = f;
exports.g = g;
exports.F = F;
exports.C4 = C4;
exports.G = G;
exports.M = M;
exports.M$p = M$p;
exports.M$p$p = M$p$p;
exports.M2 = M2;
exports.M3 = M3;
exports.M3$p = M3$p;
exports.M4 = M4;
exports.F0 = F0;
exports.G0 = G0;
exports.M5 = M5;
exports.M6 = M6;
exports.M1 = M1;
exports.M7 = M7;
exports.M8 = M8;
exports.M9 = M9;
exports.M10 = M10;
/*  Not a pure module */
