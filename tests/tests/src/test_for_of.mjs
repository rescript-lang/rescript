// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Mocha from "mocha";
import * as Test_utils from "./test_utils.mjs";

Mocha.describe("Test_for_of", () => {
  Mocha.test("basic iteration", () => {
    let arr = [
      1,
      2,
      3,
      4,
      5
    ];
    let sum = 0;
    for (let x of arr) {
      sum = sum + x | 0;
    }
    Test_utils.eq("File \"test_for_of.res\", line 13, characters 7-14", sum, 15);
  });
  Mocha.test("single element", () => {
    let arr = [42];
    let result = 0;
    for (let x of arr) {
      result = x;
    }
    Test_utils.eq("File \"test_for_of.res\", line 24, characters 7-14", result, 42);
  });
  Mocha.test("empty array", () => {
    let arr = [];
    for (let x of arr) {
      Test_utils.ok("File \"test_for_of.res\", line 32, characters 9-16", false);
    }
  });
});

async function processData(data) {
  return data + 10 | 0;
}

async function asyncProcess(arr) {
  let results = [];
  for (let item of arr) {
    let result = await processData(item);
    results.push(result);
  }
  return results;
}

function testWildcardPattern() {
  let arr = [
    1,
    2,
    3
  ];
  let count = 0;
  for (let _for_of of arr) {
    count = count + 1 | 0;
  }
  return count === 3;
}

export {
  processData,
  asyncProcess,
  testWildcardPattern,
}
/*  Not a pure module */
