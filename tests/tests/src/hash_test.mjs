// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Mt from "./mt.mjs";
import * as Mt_global from "./mt_global.mjs";
import * as Belt_Array from "rescript/lib/es6/Belt_Array.js";
import * as Ocaml_Hashtbl from "./ocaml_compat/Ocaml_Hashtbl.mjs";

let suites = {
  contents: /* [] */0
};

let test_id = {
  contents: 0
};

function eq(f, x, y) {
  Mt_global.collect_eq(test_id, suites, f, x, y);
}

let test_strings = Belt_Array.init(32, i => String.fromCodePoint(i).repeat(i));

let test_strings_hash_results = [
  0,
  904391063,
  889600889,
  929588010,
  596566298,
  365199070,
  448044845,
  311625091,
  681445541,
  634941451,
  82108334,
  17482990,
  491949228,
  696194769,
  711728152,
  594966620,
  820561748,
  958901713,
  102794744,
  378848504,
  349314368,
  114167579,
  71240932,
  110067399,
  280623927,
  323523937,
  310683234,
  178511779,
  585018975,
  544388424,
  1043872806,
  831138595
];

function normalize(x) {
  return x & 1073741823;
}

function caml_hash(x) {
  return Ocaml_Hashtbl.hash(x) & 1073741823;
}

eq("File \"hash_test.res\", line 48, characters 12-19", Belt_Array.map(test_strings, caml_hash), test_strings_hash_results);

eq("File \"hash_test.res\", line 50, characters 12-19", Ocaml_Hashtbl.hash(0) & 1073741823, 129913994);

eq("File \"hash_test.res\", line 52, characters 12-19", Ocaml_Hashtbl.hash("x") & 1073741823, 780510073);

eq("File \"hash_test.res\", line 54, characters 12-19", Ocaml_Hashtbl.hash("xy") & 1073741823, 194127723);

Mt.from_pair_suites("Hash_test", suites.contents);

let Hashtbl;

export {
  Hashtbl,
  suites,
  test_id,
  eq,
  test_strings,
  test_strings_hash_results,
  normalize,
  caml_hash,
}
/* test_strings Not a pure module */
