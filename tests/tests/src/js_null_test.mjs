// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Mocha from "mocha";
import * as Js_null from "@rescript/runtime/lib/es6/Js_null.js";
import * as Test_utils from "./test_utils.mjs";
import * as Primitive_option from "@rescript/runtime/lib/es6/Primitive_option.js";

Mocha.describe("Js_null_test", () => {
  Mocha.test("toOption - empty", () => Test_utils.eq("File \"js_null_test.res\", line 7, characters 7-14", undefined, undefined));
  Mocha.test("toOption - 'a", () => Test_utils.eq("File \"js_null_test.res\", line 11, characters 7-14", Primitive_option.some(undefined), Primitive_option.some()));
  Mocha.test("return", () => Test_utils.eq("File \"js_null_test.res\", line 15, characters 7-14", "something", Primitive_option.fromNull("something")));
  Mocha.test("test - empty", () => Test_utils.eq("File \"js_null_test.res\", line 19, characters 7-14", true, true));
  Mocha.test("test - 'a", () => Test_utils.eq("File \"js_null_test.res\", line 23, characters 7-14", false, false));
  Mocha.test("bind - empty", () => Test_utils.eq("File \"js_null_test.res\", line 27, characters 7-14", null, Js_null.bind(null, v => v)));
  Mocha.test("bind - 'a", () => Test_utils.eq("File \"js_null_test.res\", line 31, characters 7-14", 4, Js_null.bind(2, n => (n << 1))));
  Mocha.test("iter - empty", () => {
    let hit = {
      contents: false
    };
    Js_null.iter(null, param => {
      hit.contents = true;
    });
    Test_utils.eq("File \"js_null_test.res\", line 37, characters 7-14", false, hit.contents);
  });
  Mocha.test("iter - 'a", () => {
    let hit = {
      contents: 0
    };
    Js_null.iter(2, v => {
      hit.contents = v;
    });
    Test_utils.eq("File \"js_null_test.res\", line 43, characters 7-14", 2, hit.contents);
  });
  Mocha.test("fromOption - None", () => Test_utils.eq("File \"js_null_test.res\", line 47, characters 7-14", null, Js_null.fromOption(undefined)));
  Mocha.test("fromOption - Some", () => Test_utils.eq("File \"js_null_test.res\", line 51, characters 7-14", 2, Js_null.fromOption(2)));
});

/*  Not a pure module */
