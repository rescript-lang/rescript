// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Mocha from "mocha";
import * as Belt_List from "@rescript/runtime/lib/es6/Belt_List.js";
import * as Belt_Array from "@rescript/runtime/lib/es6/Belt_Array.js";
import * as Test_utils from "./test_utils.mjs";

Mocha.describe("For_loop_test", () => {
  Mocha.test("for_loop_test_3", () => {
    let for_3 = x => {
      let v = {
        contents: 0
      };
      let arr = Belt_Array.map(x, param => (() => {}));
      for (let i = 0, i_finish = x.length; i < i_finish; ++i) {
        let j = (i << 1);
        arr[i] = () => {
          v.contents = v.contents + j | 0;
        };
      }
      Belt_Array.forEach(arr, x => x());
      return v.contents;
    };
    Test_utils.eq("File \"for_loop_test.res\", line 16, characters 7-14", 90, for_3(Belt_Array.make(10, 2)));
  });
  Mocha.test("for_loop_test_4", () => {
    let for_4 = x => {
      let v = {
        contents: 0
      };
      let arr = Belt_Array.map(x, param => (() => {}));
      for (let i = 0, i_finish = x.length; i < i_finish; ++i) {
        let j = (i << 1);
        let k = (j << 1);
        arr[i] = () => {
          v.contents = v.contents + k | 0;
        };
      }
      Belt_Array.forEach(arr, x => x());
      return v.contents;
    };
    Test_utils.eq("File \"for_loop_test.res\", line 31, characters 7-14", 180, for_4(Belt_Array.make(10, 2)));
  });
  Mocha.test("for_loop_test_5", () => {
    let for_5 = (x, u) => {
      let v = {
        contents: 0
      };
      let arr = Belt_Array.map(x, param => (() => {}));
      for (let i = 0, i_finish = x.length; i < i_finish; ++i) {
        let k = (u << 1) * u | 0;
        arr[i] = () => {
          v.contents = v.contents + k | 0;
        };
      }
      Belt_Array.forEach(arr, x => x());
      return v.contents;
    };
    Test_utils.eq("File \"for_loop_test.res\", line 46, characters 7-14", 2420, for_5(Belt_Array.make(10, 2), 11));
  });
  Mocha.test("for_loop_test_6", () => {
    let for_6 = (x, u) => {
      let v = {
        contents: 0
      };
      let arr = Belt_Array.map(x, param => (() => {}));
      let v4 = {
        contents: 0
      };
      let v5 = {
        contents: 0
      };
      let inspect_3 = -1;
      v4.contents = v4.contents + 1 | 0;
      for (let j = 0; j <= 1; ++j) {
        v5.contents = v5.contents + 1 | 0;
        let v2 = {
          contents: 0
        };
        for (let i = 0, i_finish = x.length; i < i_finish; ++i) {
          let k = (u << 1) * u | 0;
          let h = (v5.contents << 1);
          v2.contents = v2.contents + 1 | 0;
          arr[i] = () => {
            v.contents = (((((v.contents + k | 0) + v2.contents | 0) + v4.contents | 0) + v5.contents | 0) + h | 0) + u | 0;
          };
        }
        inspect_3 = v2.contents;
      }
      Belt_Array.forEach(arr, x => x());
      return [
        v.contents,
        v4.contents,
        v5.contents,
        inspect_3
      ];
    };
    Test_utils.eq("File \"for_loop_test.res\", line 74, characters 7-14", [
      30,
      1,
      2,
      3
    ], for_6(Belt_Array.make(3, 0), 0));
  });
  Mocha.test("for_loop_test_7", () => {
    let for_7 = () => {
      let v = {
        contents: 0
      };
      let arr = Belt_Array.make(21, () => {});
      for (let i = 0; i <= 6; ++i) {
        for (let j = 0; j <= 2; ++j) {
          arr[(i * 3 | 0) + j | 0] = () => {
            v.contents = (v.contents + i | 0) + j | 0;
          };
        }
      }
      Belt_Array.forEach(arr, f => f());
      return v.contents;
    };
    Test_utils.eq("File \"for_loop_test.res\", line 91, characters 7-14", 84, for_7());
  });
  Mocha.test("for_loop_test_8", () => {
    let for_8 = () => {
      let v = {
        contents: 0
      };
      let arr = Belt_Array.make(21, () => {});
      for (let i = 0; i <= 6; ++i) {
        let k = (i << 1);
        for (let j = 0; j <= 2; ++j) {
          let h = i + j | 0;
          arr[(i * 3 | 0) + j | 0] = () => {
            v.contents = (((v.contents + i | 0) + j | 0) + h | 0) + k | 0;
          };
        }
      }
      Belt_Array.forEach(arr, f => f());
      return v.contents;
    };
    Test_utils.eq("File \"for_loop_test.res\", line 110, characters 7-14", 294, for_8());
  });
  Mocha.test("for_loop_test_9", () => {
    let for_9 = () => {
      let v = {
        contents: /* [] */0
      };
      let collect = x => {
        v.contents = {
          hd: x,
          tl: v.contents
        };
      };
      let vv = {
        contents: 0
      };
      let vv2 = {
        contents: 0
      };
      let arr = Belt_Array.make(4, () => {});
      let arr2 = Belt_Array.make(2, () => {});
      for (let i = 0; i <= 1; ++i) {
        let v$1 = {
          contents: 0
        };
        v$1.contents = v$1.contents + i | 0;
        for (let j = 0; j <= 1; ++j) {
          v$1.contents = v$1.contents + 1 | 0;
          collect(v$1.contents);
          arr[(i << 1) + j | 0] = () => {
            vv.contents = vv.contents + v$1.contents | 0;
          };
        }
        arr2[i] = () => {
          vv2.contents = vv2.contents + v$1.contents | 0;
        };
      }
      Belt_Array.forEach(arr, f => f());
      Belt_Array.forEach(arr2, f => f());
      return [[
          vv.contents,
          Belt_List.toArray(Belt_List.reverse(v.contents)),
          vv2.contents
        ]];
    };
    Test_utils.eq("File \"for_loop_test.res\", line 158, characters 7-14", [[
        10,
        [
          1,
          2,
          2,
          3
        ],
        5
      ]], for_9());
  });
});

/*  Not a pure module */
