// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Mocha from "mocha";
import * as Test_utils from "./test_utils.mjs";

function nest(x) {
  if (x.TAG === "A") {
    let match = x._0;
    if (match === 0) {
      return 0;
    } else if (match === 1) {
      return 1;
    } else {
      return 2;
    }
  }
  let match$1 = x._0;
  if (x._1 !== 0) {
    if (match$1 === 1) {
      return 4;
    } else if (match$1 === 2) {
      return 5;
    } else {
      return 6;
    }
  } else {
    return 3;
  }
}

function f2(x, b) {
  if (x === 1) {
    return b;
  } else if (x === 2) {
    return 0;
  } else if (x === "c") {
    return 33;
  } else {
    return 3;
  }
}

function f3(x, b) {
  if (typeof x !== "object") {
    return 3;
  }
  let variant = x.NAME;
  if (variant === 32) {
    return x.VAL[0];
  } else if (variant === 333) {
    return x.VAL[1];
  } else {
    return x.VAL;
  }
}

function h(x) {
  return x === 0;
}

let g = /* 'b' */98;

let hihi = f3(3, 0);

let hh10 = "3" === 3;

let tuple_0 = nest({
  TAG: "A",
  _0: 0
});

let tuple_1 = nest({
  TAG: "A",
  _0: 1
});

let tuple_2 = nest({
  TAG: "A",
  _0: 2
});

let tuple_3 = nest({
  TAG: "B",
  _0: 1,
  _1: 0
});

let tuple_4 = nest({
  TAG: "B",
  _0: 1,
  _1: 1
});

let tuple_5 = nest({
  TAG: "B",
  _0: 2,
  _1: 1
});

let tuple_6 = nest({
  TAG: "B",
  _0: 2,
  _1: 2
});

let tuple_7 = nest({
  TAG: "B",
  _0: 0,
  _1: 0
});

let tuple_8 = nest({
  TAG: "B",
  _0: 0,
  _1: 1
});

let tuple = [
  tuple_0,
  tuple_1,
  tuple_2,
  tuple_3,
  tuple_4,
  tuple_5,
  tuple_6,
  tuple_7,
  tuple_8,
  true,
  hh10
];

function hh0(x) {
  return x;
}

function hh1(x) {
  return x;
}

function f(x) {
  if (x.NAME === 1) {
    return x.VAL;
  } else {
    return x.VAL.toString();
  }
}

Mocha.describe("Int_poly_var", () => {
  Mocha.test("int poly var test", () => {
    Test_utils.eq("File \"int_poly_var.res\", line 102, characters 7-14", hihi, 3);
    Test_utils.eq("File \"int_poly_var.res\", line 103, characters 7-14", tuple, [
      0,
      1,
      2,
      3,
      4,
      5,
      5,
      3,
      6,
      true,
      false
    ]);
  });
});

let u = 1;

let hh9 = true;

let begin = 3;

export {
  u,
  nest,
  f2,
  f3,
  h,
  g,
  hihi,
  hh9,
  hh10,
  tuple,
  begin,
  hh0,
  hh1,
  f,
}
/* hihi Not a pure module */
