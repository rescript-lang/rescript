// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Mt from "./mt.mjs";
import * as Primitive_exceptions from "rescript/lib/es6/Primitive_exceptions.js";

let suites = {
  contents: /* [] */0
};

let test_id = {
  contents: 0
};

function eq(loc, x, y) {
  Mt.eq_suites(test_id, suites, loc, x, y);
}

let v = {
  a: 3,
  b: {
    xx: 2,
    yy: 3
  }
};

let u_a = 2;

let u_b = {
  xx: 2,
  yy: 3
};

let u = {
  a: u_a,
  b: u_b
};

let A = /* @__PURE__ */Primitive_exceptions.create("Record_debug_test.A");

let B = /* @__PURE__ */Primitive_exceptions.create("Record_debug_test.B");

let v0 = {
  RE_EXN_ID: A,
  _1: 3
};

let v1 = {
  RE_EXN_ID: B,
  _1: 3,
  _2: 2
};

let N = {
  a: 0,
  b: 1
};

function N0_f(prim) {
  return prim;
}

let N0 = {
  a: 0,
  b: 1,
  f: N0_f
};

console.log("hei", v);

let a = [
  1,
  2,
  2,
  4,
  3
];

let c = [
  1,
  2,
  3,
  4,
  5
];

console.log(a, c);

eq("File \"record_debug_test.res\", line 56, characters 3-10", [
  "",
  "a"
], [
  "",
  "a"
]);

Mt.from_pair_suites("record_debug_test.res", suites.contents);

let h = {
  hd: 1,
  tl: {
    hd: 2,
    tl: {
      hd: 3,
      tl: {
        hd: 4,
        tl: /* [] */0
      }
    }
  }
};

let v2 = {
  NAME: "C",
  VAL: 2
};

let v3 = {
  NAME: "C",
  VAL: [
    2,
    3
  ]
};

export {
  suites,
  test_id,
  eq,
  v,
  u,
  h,
  A,
  B,
  v0,
  v1,
  v2,
  v3,
  N,
  N0,
  a,
  c,
}
/*  Not a pure module */
