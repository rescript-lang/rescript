// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

let Mt = require("./mt.js");
let Pervasives = require("rescript/lib/js/pervasives.js");
let Primitive_exceptions = require("rescript/lib/js/primitive_exceptions.js");

let suites = {
  contents: /* [] */0
};

let test_id = {
  contents: 0
};

function eq(loc, x, y) {
  test_id.contents = test_id.contents + 1 | 0;
  suites.contents = {
    hd: [
      loc + (" id " + test_id.contents.toString()),
      () => ({
        TAG: "Eq",
        _0: x,
        _1: y
      })
    ],
    tl: suites.contents
  };
}

let y;

try {
  Pervasives.failwith("boo");
  y = undefined;
} catch (raw_msg) {
  let msg = Primitive_exceptions.internalToException(raw_msg);
  if (msg.RE_EXN_ID === "Failure") {
    y = msg._1;
  } else {
    throw msg;
  }
}

let x;

let exit = 0;

let e;

try {
  e = Pervasives.failwith("boo");
  exit = 1;
} catch (raw_msg$1) {
  let msg$1 = Primitive_exceptions.internalToException(raw_msg$1);
  if (msg$1.RE_EXN_ID === "Failure") {
    x = msg$1._1;
  } else {
    throw msg$1;
  }
}

if (exit === 1) {
  console.log("ok");
  x = undefined;
}

eq("File \"gpr_2316_test.res\", line 25, characters 5-12", y, "boo");

eq("File \"gpr_2316_test.res\", line 26, characters 5-12", x, "boo");

Mt.from_pair_suites("Gpr_2316_test", suites.contents);

exports.suites = suites;
exports.test_id = test_id;
exports.eq = eq;
exports.y = y;
exports.x = x;
/* y Not a pure module */
