// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Mocha from "mocha";
import * as Js_option from "@rescript/runtime/lib/es6/Js_option.js";
import * as Test_utils from "./test_utils.mjs";

function simpleEq(a, b) {
  return a === b;
}

Mocha.describe("Js_option_test", () => {
  Mocha.test("option_isSome_Some", () => Test_utils.eq("File \"js_option_test.res\", line 8, characters 7-14", true, Js_option.isSome(1)));
  Mocha.test("option_isSome_None", () => Test_utils.eq("File \"js_option_test.res\", line 12, characters 7-14", false, Js_option.isSome(undefined)));
  Mocha.test("option_isNone_Some", () => Test_utils.eq("File \"js_option_test.res\", line 16, characters 7-14", false, Js_option.isNone(1)));
  Mocha.test("option_isNone_None", () => Test_utils.eq("File \"js_option_test.res\", line 20, characters 7-14", true, Js_option.isNone(undefined)));
  Mocha.test("option_isSomeValue_Eq", () => Test_utils.eq("File \"js_option_test.res\", line 24, characters 7-14", true, Js_option.isSomeValue(simpleEq, 2, 2)));
  Mocha.test("option_isSomeValue_Diff", () => Test_utils.eq("File \"js_option_test.res\", line 28, characters 7-14", false, Js_option.isSomeValue(simpleEq, 1, 2)));
  Mocha.test("option_isSomeValue_DiffNone", () => Test_utils.eq("File \"js_option_test.res\", line 32, characters 7-14", false, Js_option.isSomeValue(simpleEq, 1, undefined)));
  Mocha.test("option_getExn_Some", () => Test_utils.eq("File \"js_option_test.res\", line 36, characters 7-14", 2, Js_option.getExn(2)));
  Mocha.test("option_equal_Eq", () => Test_utils.eq("File \"js_option_test.res\", line 40, characters 7-14", true, Js_option.equal(simpleEq, 2, 2)));
  Mocha.test("option_equal_Diff", () => Test_utils.eq("File \"js_option_test.res\", line 44, characters 7-14", false, Js_option.equal(simpleEq, 1, 2)));
  Mocha.test("option_equal_DiffNone", () => Test_utils.eq("File \"js_option_test.res\", line 48, characters 7-14", false, Js_option.equal(simpleEq, 1, undefined)));
  Mocha.test("option_andThen_SomeSome", () => Test_utils.eq("File \"js_option_test.res\", line 53, characters 6-13", true, Js_option.isSomeValue(simpleEq, 3, Js_option.andThen(a => a + 1 | 0, 2))));
  Mocha.test("option_andThen_SomeNone", () => Test_utils.eq("File \"js_option_test.res\", line 60, characters 7-14", false, Js_option.isSomeValue(simpleEq, 3, Js_option.andThen(param => {}, 2))));
  Mocha.test("option_map_Some", () => Test_utils.eq("File \"js_option_test.res\", line 64, characters 7-14", true, Js_option.isSomeValue(simpleEq, 3, Js_option.map(a => a + 1 | 0, 2))));
  Mocha.test("option_map_None", () => Test_utils.eq("File \"js_option_test.res\", line 68, characters 7-14", undefined, Js_option.map(a => a + 1 | 0, undefined)));
  Mocha.test("option_default_Some", () => Test_utils.eq("File \"js_option_test.res\", line 72, characters 7-14", 2, Js_option.getWithDefault(3, 2)));
  Mocha.test("option_default_None", () => Test_utils.eq("File \"js_option_test.res\", line 76, characters 7-14", 3, Js_option.getWithDefault(3, undefined)));
  Mocha.test("option_filter_Pass", () => Test_utils.eq("File \"js_option_test.res\", line 81, characters 6-13", true, Js_option.isSomeValue(simpleEq, 2, Js_option.filter(a => a % 2 === 0, 2))));
  Mocha.test("option_filter_Reject", () => Test_utils.eq("File \"js_option_test.res\", line 88, characters 7-14", undefined, Js_option.filter(a => a % 3 === 0, 2)));
  Mocha.test("option_filter_None", () => Test_utils.eq("File \"js_option_test.res\", line 92, characters 7-14", undefined, Js_option.filter(a => a % 3 === 0, undefined)));
  Mocha.test("option_firstSome_First", () => Test_utils.eq("File \"js_option_test.res\", line 96, characters 7-14", true, Js_option.isSomeValue(simpleEq, 3, Js_option.firstSome(3, 2))));
  Mocha.test("option_firstSome_Second", () => Test_utils.eq("File \"js_option_test.res\", line 100, characters 7-14", true, Js_option.isSomeValue(simpleEq, 2, Js_option.firstSome(undefined, 2))));
  Mocha.test("option_firstSome_None", () => Test_utils.eq("File \"js_option_test.res\", line 104, characters 7-14", undefined, Js_option.firstSome(undefined, undefined)));
});

export {
  simpleEq,
}
/*  Not a pure module */
