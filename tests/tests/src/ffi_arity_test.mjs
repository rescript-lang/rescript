// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Mocha from "mocha";
import * as Test_utils from "./test_utils.mjs";

function f(v) {
  if (v % 2 === 0) {
    return v => v * v | 0;
  } else {
    return v => v + v | 0;
  }
}

let v = [
  1,
  2,
  3
].map((a, b) => f(a)(b));

let vv = [
  1,
  2,
  3
].map((a, b) => a + b | 0);

let hh = [
  "1",
  "2",
  "3"
].map(x => parseInt(x));

function u() {
  return 3;
}

let vvv = {
  contents: 0
};

function fff() {
  console.log("x");
  console.log("x");
  vvv.contents = vvv.contents + 1 | 0;
}

function g() {
  fff();
}

function abc(x, y, z) {
  console.log("xx");
  console.log("yy");
  return (x + y | 0) + z | 0;
}

let abc_u = abc;

fff();

Mocha.describe("Ffi_arity_test", () => {
  Mocha.test("mapi with function", () => Test_utils.eq("File \"ffi_arity_test.res\", line 52, characters 7-14", v, [
    0,
    1,
    4
  ]));
  Mocha.test("mapi with addition", () => Test_utils.eq("File \"ffi_arity_test.res\", line 56, characters 7-14", vv, [
    1,
    3,
    5
  ]));
  Mocha.test("map with parseInt", () => Test_utils.eq("File \"ffi_arity_test.res\", line 60, characters 7-14", hh, [
    1,
    2,
    3
  ]));
});

function bar(fn) {
  return fn();
}

((function(){console.log("forgiving arity")})());

export {
  f,
  v,
  vv,
  hh,
  u,
  vvv,
  fff,
  g,
  abc,
  abc_u,
  bar,
}
/* v Not a pure module */
