// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

let Mt = require("./mt.js");

let test_id = {
  contents: 0
};

let suites = {
  contents: /* [] */0
};

function nest(x) {
  if (x.TAG === "A") {
    let match = x._0;
    if (match === 0) {
      return 0;
    } else if (match === 1) {
      return 1;
    } else {
      return 2;
    }
  }
  let match$1 = x._0;
  if (x._1 !== 0) {
    if (match$1 === 1) {
      return 4;
    } else if (match$1 === 2) {
      return 5;
    } else {
      return 6;
    }
  } else {
    return 3;
  }
}

function f2(x, b) {
  if (x === 1) {
    return b;
  } else if (x === 2) {
    return 0;
  } else if (x === "c") {
    return 33;
  } else {
    return 3;
  }
}

function f3(x, b) {
  if (typeof x !== "object") {
    return 3;
  }
  let variant = x.NAME;
  if (variant === 32) {
    return x.VAL[0];
  } else if (variant === 333) {
    return x.VAL[1];
  } else {
    return x.VAL;
  }
}

function h(x) {
  return x === 0;
}

let g = /* 'b' */98;

let hihi = f3(3, 0);

let hh10 = "3" === 3;

let tuple_0 = nest({
  TAG: "A",
  _0: 0
});

let tuple_1 = nest({
  TAG: "A",
  _0: 1
});

let tuple_2 = nest({
  TAG: "A",
  _0: 2
});

let tuple_3 = nest({
  TAG: "B",
  _0: 1,
  _1: 0
});

let tuple_4 = nest({
  TAG: "B",
  _0: 1,
  _1: 1
});

let tuple_5 = nest({
  TAG: "B",
  _0: 2,
  _1: 1
});

let tuple_6 = nest({
  TAG: "B",
  _0: 2,
  _1: 2
});

let tuple_7 = nest({
  TAG: "B",
  _0: 0,
  _1: 0
});

let tuple_8 = nest({
  TAG: "B",
  _0: 0,
  _1: 1
});

let tuple = [
  tuple_0,
  tuple_1,
  tuple_2,
  tuple_3,
  tuple_4,
  tuple_5,
  tuple_6,
  tuple_7,
  tuple_8,
  true,
  hh10
];

Mt.eq_suites(test_id, suites, "File \"int_poly_var.res\", line 79, characters 29-36", hihi, 3);

Mt.eq_suites(test_id, suites, "File \"int_poly_var.res\", line 80, characters 29-36", tuple, [
  0,
  1,
  2,
  3,
  4,
  5,
  5,
  3,
  6,
  true,
  false
]);

function hh0(x) {
  return x;
}

function hh1(x) {
  return x;
}

function f(x) {
  if (x.NAME === 1) {
    return x.VAL;
  } else {
    return x.VAL.toString();
  }
}

Mt.from_pair_suites("int_poly_var.res", suites.contents);

let eq_suites = Mt.eq_suites;

let u = 1;

let hh9 = true;

let begin = 3;

exports.eq_suites = eq_suites;
exports.test_id = test_id;
exports.suites = suites;
exports.u = u;
exports.nest = nest;
exports.f2 = f2;
exports.f3 = f3;
exports.h = h;
exports.g = g;
exports.hihi = hihi;
exports.hh9 = hh9;
exports.hh10 = hh10;
exports.tuple = tuple;
exports.begin = begin;
exports.hh0 = hh0;
exports.hh1 = hh1;
exports.f = f;
/* hihi Not a pure module */
