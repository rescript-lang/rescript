// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Mocha from "mocha";
import * as Test_utils from "./test_utils.mjs";
import * as Primitive_array from "@rescript/runtime/lib/es6/Primitive_array.js";
import * as Tagged_template_libJs from "./tagged_template_lib.js";

function sql(prim0, prim1) {
  return Tagged_template_libJs.sql(prim0, ...prim1);
}

let Pg = {
  sql: sql
};

let table = "users";

let id = "5";

let queryWithModule = Tagged_template_libJs.sql`SELECT * FROM ${table} WHERE id = ${id}`;

let query = Tagged_template_libJs.sql`
" SELECT * FROM ${table} WHERE id = ${id}`;

let length = Tagged_template_libJs.length`hello ${10} what's the total length? Is it ${3}?`;

function foo(strings, values) {
  let res = "";
  let valueCount = values.length;
  for (let i = 0; i < valueCount; ++i) {
    res = res + Primitive_array.get(strings, i) + (Primitive_array.get(values, i) * 10 | 0).toString();
  }
  return res + Primitive_array.get(strings, valueCount);
}

let res = foo([
  `| 5 × 10 = `,
  ` |`
], [5]);

Mocha.describe("tagged templates", () => {
  Mocha.test("with externals, it should return a string with the correct interpolations", () => Test_utils.eq("File \"tagged_template_test.res\", line 40, characters 6-13", query, `
" SELECT * FROM 'users' WHERE id = '5'`));
  Mocha.test("with module scoped externals, it should also return a string with the correct interpolations", () => Test_utils.eq("File \"tagged_template_test.res\", line 49, characters 13-20", queryWithModule, "SELECT * FROM 'users' WHERE id = '5'"));
  Mocha.test("with externals, it should return the result of the function", () => Test_utils.eq("File \"tagged_template_test.res\", line 52, characters 79-86", length, 52));
  Mocha.test("with rescript function, it should return a string with the correct encoding and interpolations", () => Test_utils.eq("File \"tagged_template_test.res\", line 56, characters 13-20", res, "| 5 × 10 = 50 |"));
  Mocha.test("a template literal tagged with json should generate a regular string interpolation for now", () => Test_utils.eq("File \"tagged_template_test.res\", line 61, characters 13-20", "some random " + "string", "some random string"));
  Mocha.test("a regular string interpolation should continue working", () => Test_utils.eq("File \"tagged_template_test.res\", line 65, characters 7-14", `some random ` + "string" + ` interpolation`, "some random string interpolation"));
});

let $$Array;

let extraLength = 10;

export {
  $$Array,
  Pg,
  table,
  id,
  queryWithModule,
  query,
  extraLength,
  length,
  foo,
  res,
}
/* queryWithModule Not a pure module */
