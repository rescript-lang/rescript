// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Mocha from "mocha";
import * as Test_utils from "./test_utils.mjs";

function hi (cb){
    cb ();
    return 0;
}
;

Mocha.describe("Bs_auto_uncurry_test", () => {
  Mocha.test("callback_test", () => {
    let xs = {
      contents: /* [] */0
    };
    hi(x => {
      xs.contents = {
        hd: x,
        tl: xs.contents
      };
    });
    hi(x => {
      xs.contents = {
        hd: x,
        tl: xs.contents
      };
    });
    Test_utils.eq("File \"bs_auto_uncurry_test.res\", line 20, characters 7-14", xs.contents, {
      hd: undefined,
      tl: {
        hd: undefined,
        tl: /* [] */0
      }
    });
  });
  Mocha.test("array_operations_test", () => {
    Test_utils.eq("File \"bs_auto_uncurry_test.res\", line 24, characters 7-14", [
      1,
      2,
      3
    ].map(x => x + 1 | 0), [
      2,
      3,
      4
    ]);
    Test_utils.eq("File \"bs_auto_uncurry_test.res\", line 25, characters 7-14", [
      1,
      2,
      3
    ].map(x => x + 1 | 0), [
      2,
      3,
      4
    ]);
    Test_utils.eq("File \"bs_auto_uncurry_test.res\", line 26, characters 7-14", [
      1,
      2,
      3
    ].reduce((x, y) => x + y | 0, 0), 6);
    Test_utils.eq("File \"bs_auto_uncurry_test.res\", line 27, characters 7-14", [
      1,
      2,
      3
    ].reduce((x, y, i) => (x + y | 0) + i | 0, 0), 9);
    Test_utils.eq("File \"bs_auto_uncurry_test.res\", line 28, characters 7-14", [
      1,
      2,
      3
    ].some(x => x < 1), false);
    Test_utils.eq("File \"bs_auto_uncurry_test.res\", line 29, characters 7-14", [
      1,
      2,
      3
    ].every(x => x > 0), true);
  });
});

/*  Not a pure module */
