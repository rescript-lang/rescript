Complete src/CompletionPipeChain.res 27:16
posCursor:[27:16] posNoWhite:[27:15] Found expr:[27:11->0:-1]
Completable: Cpath Value[int]->
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[int]->
ContextPath Value[int]
Path int
CPPipe pathFromEnv:Integer found:true
Path Integer.
[{
    "label": "Integer.toInt",
    "kind": 12,
    "tags": [],
    "detail": "t => int",
    "documentation": null
  }, {
    "label": "Integer.increment",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }, {
    "label": "Integer.decrement",
    "kind": 12,
    "tags": [],
    "detail": "(t, int => int) => t",
    "documentation": null
  }]

Complete src/CompletionPipeChain.res 30:23
posCursor:[30:23] posNoWhite:[30:22] Found expr:[30:11->0:-1]
Completable: Cpath Value[toFlt](Nolabel)->
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[toFlt](Nolabel)->
ContextPath Value[toFlt](Nolabel)
ContextPath Value[toFlt]
Path toFlt
CPPipe pathFromEnv:SuperFloat found:true
Path SuperFloat.
[{
    "label": "SuperFloat.toInteger",
    "kind": 12,
    "tags": [],
    "detail": "t => Integer.t",
    "documentation": null
  }]

Complete src/CompletionPipeChain.res 33:38
posCursor:[33:38] posNoWhite:[33:37] Found expr:[33:11->0:-1]
Completable: Cpath Value[Integer, increment](Nolabel, Nolabel)->
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[Integer, increment](Nolabel, Nolabel)->
ContextPath Value[Integer, increment](Nolabel, Nolabel)
ContextPath Value[Integer, increment]
Path Integer.increment
CPPipe pathFromEnv:Integer found:true
Path Integer.
[{
    "label": "Integer.toInt",
    "kind": 12,
    "tags": [],
    "detail": "t => int",
    "documentation": null
  }, {
    "label": "Integer.increment",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }, {
    "label": "Integer.decrement",
    "kind": 12,
    "tags": [],
    "detail": "(t, int => int) => t",
    "documentation": null
  }]

Complete src/CompletionPipeChain.res 36:38
posCursor:[36:38] posNoWhite:[36:37] Found expr:[36:11->0:-1]
Completable: Cpath Value[Integer, increment](Nolabel, Nolabel)->
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[Integer, increment](Nolabel, Nolabel)->
ContextPath Value[Integer, increment](Nolabel, Nolabel)
ContextPath Value[Integer, increment]
Path Integer.increment
CPPipe pathFromEnv:Integer found:true
Path Integer.
[{
    "label": "Integer.toInt",
    "kind": 12,
    "tags": [],
    "detail": "t => int",
    "documentation": null
  }, {
    "label": "Integer.increment",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }, {
    "label": "Integer.decrement",
    "kind": 12,
    "tags": [],
    "detail": "(t, int => int) => t",
    "documentation": null
  }]

Complete src/CompletionPipeChain.res 39:47
posCursor:[39:47] posNoWhite:[39:46] Found expr:[39:11->0:-1]
Completable: Cpath Value[Integer, decrement](Nolabel, Nolabel)->
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[Integer, decrement](Nolabel, Nolabel)->
ContextPath Value[Integer, decrement](Nolabel, Nolabel)
ContextPath Value[Integer, decrement]
Path Integer.decrement
CPPipe pathFromEnv:Integer found:true
Path Integer.
[{
    "label": "Integer.toInt",
    "kind": 12,
    "tags": [],
    "detail": "t => int",
    "documentation": null
  }, {
    "label": "Integer.increment",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }, {
    "label": "Integer.decrement",
    "kind": 12,
    "tags": [],
    "detail": "(t, int => int) => t",
    "documentation": null
  }]

Complete src/CompletionPipeChain.res 42:69
posCursor:[42:69] posNoWhite:[42:68] Found expr:[42:11->0:-1]
Completable: Cpath Value[Integer, decrement](Nolabel, Nolabel)->
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[Integer, decrement](Nolabel, Nolabel)->
ContextPath Value[Integer, decrement](Nolabel, Nolabel)
ContextPath Value[Integer, decrement]
Path Integer.decrement
CPPipe pathFromEnv:Integer found:true
Path Integer.
[{
    "label": "Integer.toInt",
    "kind": 12,
    "tags": [],
    "detail": "t => int",
    "documentation": null
  }, {
    "label": "Integer.increment",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }, {
    "label": "Integer.decrement",
    "kind": 12,
    "tags": [],
    "detail": "(t, int => int) => t",
    "documentation": null
  }]

Complete src/CompletionPipeChain.res 45:62
posCursor:[45:62] posNoWhite:[45:61] Found expr:[45:11->0:-1]
Completable: Cpath Value[SuperFloat, fromInteger](Nolabel)->
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[SuperFloat, fromInteger](Nolabel)->
ContextPath Value[SuperFloat, fromInteger](Nolabel)
ContextPath Value[SuperFloat, fromInteger]
Path SuperFloat.fromInteger
CPPipe pathFromEnv:SuperFloat found:true
Path SuperFloat.
[{
    "label": "SuperFloat.toInteger",
    "kind": 12,
    "tags": [],
    "detail": "t => Integer.t",
    "documentation": null
  }]

Complete src/CompletionPipeChain.res 48:63
posCursor:[48:63] posNoWhite:[48:62] Found expr:[48:11->48:63]
Completable: Cpath Value[SuperFloat, fromInteger](Nolabel)->t
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[SuperFloat, fromInteger](Nolabel)->t
ContextPath Value[SuperFloat, fromInteger](Nolabel)
ContextPath Value[SuperFloat, fromInteger]
Path SuperFloat.fromInteger
CPPipe pathFromEnv:SuperFloat found:true
Path SuperFloat.t
[{
    "label": "SuperFloat.toInteger",
    "kind": 12,
    "tags": [],
    "detail": "t => Integer.t",
    "documentation": null
  }]

Complete src/CompletionPipeChain.res 51:82
posCursor:[51:82] posNoWhite:[51:81] Found expr:[51:11->0:-1]
Completable: Cpath Value[CompletionSupport, Test, make](Nolabel)->
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[CompletionSupport, Test, make](Nolabel)->
ContextPath Value[CompletionSupport, Test, make](Nolabel)
ContextPath Value[CompletionSupport, Test, make]
Path CompletionSupport.Test.make
CPPipe pathFromEnv:Test found:true
Path CompletionSupport.Test.
[{
    "label": "CompletionSupport.Test.add",
    "kind": 12,
    "tags": [],
    "detail": "t => int",
    "documentation": null
  }, {
    "label": "CompletionSupport.Test.addSelf",
    "kind": 12,
    "tags": [],
    "detail": "t => t",
    "documentation": null
  }]

Complete src/CompletionPipeChain.res 54:78
posCursor:[54:78] posNoWhite:[54:77] Found expr:[54:11->0:-1]
Completable: Cpath Value[CompletionSupport, Test, addSelf](Nolabel, Nolabel)->
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[CompletionSupport, Test, addSelf](Nolabel, Nolabel)->
ContextPath Value[CompletionSupport, Test, addSelf](Nolabel, Nolabel)
ContextPath Value[CompletionSupport, Test, addSelf]
Path CompletionSupport.Test.addSelf
CPPipe pathFromEnv:Test found:true
Path CompletionSupport.Test.
[{
    "label": "CompletionSupport.Test.add",
    "kind": 12,
    "tags": [],
    "detail": "t => int",
    "documentation": null
  }, {
    "label": "CompletionSupport.Test.addSelf",
    "kind": 12,
    "tags": [],
    "detail": "t => t",
    "documentation": null
  }]

Complete src/CompletionPipeChain.res 58:5
posCursor:[58:5] posNoWhite:[58:4] Found expr:[57:8->0:-1]
Completable: Cpath Value[Array, forEach](Nolabel, Nolabel)->
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[Array, forEach](Nolabel, Nolabel)->
ContextPath Value[Array, forEach](Nolabel, Nolabel)
ContextPath Value[Array, forEach]
Path Array.forEach
CPPipe pathFromEnv: found:true
Path Stdlib_Array.
[]

Complete src/CompletionPipeChain.res 62:6
posCursor:[62:6] posNoWhite:[62:5] Found expr:[61:8->62:6]
Completable: Cpath Value[Belt, Array, reduce](Nolabel, Nolabel, Nolabel)->t
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[Belt, Array, reduce](Nolabel, Nolabel, Nolabel)->t
ContextPath Value[Belt, Array, reduce](Nolabel, Nolabel, Nolabel)
ContextPath Value[Belt, Array, reduce]
Path Belt.Array.reduce
Path Stdlib.Int.t
[{
    "label": "Int.toStringWithRadix",
    "kind": 12,
    "tags": [1],
    "detail": "(int, ~radix: int) => string",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use `toString` instead\n\n\n`toStringWithRadix(n, ~radix)` return a `string` representing the given value.\n`~radix` specifies the radix base to use for the formatted number.\nSee [`Number.toString`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toString)\non MDN.\n\n## Examples\n\n```rescript\nInt.toStringWithRadix(6, ~radix=2) // \"110\"\nInt.toStringWithRadix(373592855, ~radix=16) // \"16449317\"\nInt.toStringWithRadix(123456, ~radix=36) // \"2n9c\"\n```\n\n## Exceptions\n\n`RangeError`: if `radix` is less than 2 or greater than 36.\n"}
  }, {
    "label": "Int.toExponentialWithPrecision",
    "kind": 12,
    "tags": [1],
    "detail": "(int, ~digits: int) => string",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use `toExponential` instead\n\n\n`toExponential(n, ~digits)` return a `string` representing the given value in\nexponential notation. `digits` specifies how many digits should appear after\nthe decimal point. See [`Number.toExponential`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential)\non MDN.\n\n## Examples\n\n```rescript\nInt.toExponentialWithPrecision(77, ~digits=2) // \"7.70e+1\"\nInt.toExponentialWithPrecision(5678, ~digits=2) // \"5.68e+3\"\n```\n\n## Exceptions\n\n- `RangeError`: If `digits` less than 0 or greater than 10.\n"}
  }, {
    "label": "Int.toFixedWithPrecision",
    "kind": 12,
    "tags": [1],
    "detail": "(int, ~digits: int) => string",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use `toFixed` instead\n\n\n`toFixedWithPrecision(n, ~digits)` return a `string` representing the given\nvalue using fixed-point notation. `digits` specifies how many digits should\nappear after the decimal point. See [`Number.toFixed`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed)\non MDN.\n\n## Examples\n\n```rescript\nInt.toFixedWithPrecision(300, ~digits=4) // \"300.0000\"\nInt.toFixedWithPrecision(300, ~digits=1) // \"300.0\"\n```\n\n## Exceptions\n\n- `RangeError`: If `digits` is less than 0 or larger than 100.\n"}
  }, {
    "label": "Int.toPrecisionWithPrecision",
    "kind": 12,
    "tags": [1],
    "detail": "(int, ~digits: int) => string",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use `toPrecision` instead\n\n\n`toPrecisionWithPrecision(n, ~digits)` return a `string` representing the giver value with\nprecision. `digits` specifies the number of significant digits. See [`Number.toPrecision`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision) on MDN.\n\n## Examples\n\n```rescript\nInt.toPrecisionWithPrecision(100, ~digits=2) // \"1.0e+2\"\nInt.toPrecisionWithPrecision(1, ~digits=2) // \"1.0\"\n```\n\n## Exceptions\n\n- `RangeError`: If `digits` is not between 1 and 100 (inclusive).\nImplementations are allowed to support larger and smaller values as well.\nECMA-262 only requires a precision of up to 21 significant digits.\n\n"}
  }, {
    "label": "Int.toPrecision",
    "kind": 12,
    "tags": [],
    "detail": "(int, ~digits: int=?) => string",
    "documentation": {"kind": "markdown", "value": "\n`toPrecision(n, ~digits=?)` return a `string` representing the giver value with\nprecision. `digits` specifies the number of significant digits. See [`Number.toPrecision`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision) on MDN.\n\n## Examples\n\n```rescript\nInt.toPrecision(100) // \"100\"\nInt.toPrecision(1) // \"1\"\nInt.toPrecision(100, ~digits=2) // \"1.0e+2\"\nInt.toPrecision(1, ~digits=2) // \"1.0\"\n```\n\n## Exceptions\n\n- `RangeError`: If `digits` is not between 1 and 100 (inclusive).\nImplementations are allowed to support larger and smaller values as well.\nECMA-262 only requires a precision of up to 21 significant digits.\n"}
  }, {
    "label": "Int.toString",
    "kind": 12,
    "tags": [],
    "detail": "(int, ~radix: int=?) => string",
    "documentation": {"kind": "markdown", "value": "\n`toString(n, ~radix=?)` return a `string` representing the given value.\n`~radix` specifies the radix base to use for the formatted number.\nSee [`Number.toString`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toString)\non MDN.\n\n## Examples\n\n```rescript\nInt.toString(1000) // \"1000\"\nInt.toString(-1000) // \"-1000\"\nInt.toString(6, ~radix=2) // \"110\"\nInt.toString(373592855, ~radix=16) // \"16449317\"\nInt.toString(123456, ~radix=36) // \"2n9c\"\n```\n\n## Exceptions\n\n`RangeError`: if `radix` is less than 2 or greater than 36.\n"}
  }, {
    "label": "Int.toFloat",
    "kind": 12,
    "tags": [],
    "detail": "int => float",
    "documentation": {"kind": "markdown", "value": "\n`toFloat(n)` return a `float` representing the given value.\n\n## Examples\n\n```rescript\nInt.toFloat(100) == 100.0\nInt.toFloat(2) == 2.0\n```\n"}
  }, {
    "label": "Int.toLocaleString",
    "kind": 12,
    "tags": [],
    "detail": "int => string",
    "documentation": {"kind": "markdown", "value": "\n`toLocaleString(n)` return a `string` with language-sensitive representing the\ngiven value. See [`Number.toLocaleString`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString) on MDN.\n\n## Examples\n\n```rescript\n// If the application uses English as the default language\nInt.toLocaleString(1000) // \"1,000\"\n\n// If the application uses Portuguese Brazil as the default language\nInt.toLocaleString(1000) // \"1.000\"\n```\n"}
  }, {
    "label": "Int.toExponential",
    "kind": 12,
    "tags": [],
    "detail": "(int, ~digits: int=?) => string",
    "documentation": {"kind": "markdown", "value": "\n`toExponential(n, ~digits=?)` return a `string` representing the given value in\nexponential notation. `digits` specifies how many digits should appear after\nthe decimal point. See [`Number.toExponential`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential)\n\n## Examples\n\n```rescript\nInt.toExponential(1000) // \"1e+3\"\nInt.toExponential(-1000) // \"-1e+3\"\nInt.toExponential(77, ~digits=2) // \"7.70e+1\"\nInt.toExponential(5678, ~digits=2) // \"5.68e+3\"\n```\n\n## Exceptions\n\n- `RangeError`: If `digits` less than 0 or greater than 10.\n"}
  }, {
    "label": "Int.toFixed",
    "kind": 12,
    "tags": [],
    "detail": "(int, ~digits: int=?) => string",
    "documentation": {"kind": "markdown", "value": "\n`toFixed(n, ~digits=?)` return a `string` representing the given\nvalue using fixed-point notation. `digits` specifies how many digits should\nappear after the decimal point. See [`Number.toFixed`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed)\non MDN.\n\n## Examples\n\n```rescript\nInt.toFixed(123456) // \"123456.00\"\nInt.toFixed(10) // \"10.00\"\nInt.toFixed(300, ~digits=4) // \"300.0000\"\nInt.toFixed(300, ~digits=1) // \"300.0\"\n```\n\n## Exceptions\n\n- `RangeError`: If `digits` is less than 0 or larger than 100.\n"}
  }]

Complete src/CompletionPipeChain.res 70:12
posCursor:[70:12] posNoWhite:[70:11] Found expr:[70:3->0:-1]
Completable: Cpath Value[aliased]->
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[aliased]->
ContextPath Value[aliased]
Path aliased
CPPipe pathFromEnv:CompletionSupport.Test found:false
Path CompletionSupport.Test.
[{
    "label": "CompletionSupport.Test.add",
    "kind": 12,
    "tags": [],
    "detail": "t => int",
    "documentation": null
  }, {
    "label": "CompletionSupport.Test.addSelf",
    "kind": 12,
    "tags": [],
    "detail": "t => t",
    "documentation": null
  }]

Complete src/CompletionPipeChain.res 73:15
posCursor:[73:15] posNoWhite:[73:14] Found expr:[73:3->0:-1]
Completable: Cpath Value[notAliased]->
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[notAliased]->
ContextPath Value[notAliased]
Path notAliased
CPPipe pathFromEnv:CompletionSupport.Test found:false
Path CompletionSupport.Test.
[{
    "label": "CompletionSupport.Test.add",
    "kind": 12,
    "tags": [],
    "detail": "t => int",
    "documentation": null
  }, {
    "label": "CompletionSupport.Test.addSelf",
    "kind": 12,
    "tags": [],
    "detail": "t => t",
    "documentation": null
  }]

Complete src/CompletionPipeChain.res 82:30
posCursor:[82:30] posNoWhite:[82:29] Found expr:[76:15->93:1]
Pexp_apply ...[76:15->76:46] (~prepare77:3->77:10=...[77:11->77:24], ~render78:3->78:9=...[78:10->91:3], ...[92:2->92:4])
posCursor:[82:30] posNoWhite:[82:29] Found expr:[78:10->91:3]
posCursor:[82:30] posNoWhite:[82:29] Found expr:[79:4->90:14]
posCursor:[82:30] posNoWhite:[82:29] Found expr:[82:7->90:14]
posCursor:[82:30] posNoWhite:[82:29] Found expr:[82:7->82:30]
Completable: Cpath Value[props].support.root->ren
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[props].support.root->ren
ContextPath Value[props].support.root
ContextPath Value[props].support
ContextPath Value[props]
Path props
ContextPath Value[props]->support
ContextPath Value[props]
Path props
CPPipe pathFromEnv:CompletionSupport2.Internal found:false
Path CompletionSupport2.Internal.support
ContextPath Value[props].support->root
ContextPath Value[props].support
ContextPath Value[props]
Path props
ContextPath Value[props]->support
ContextPath Value[props]
Path props
CPPipe pathFromEnv:CompletionSupport2.Internal found:false
Path CompletionSupport2.Internal.support
CPPipe pathFromEnv:CompletionSupport.Nested found:false
Path CompletionSupport.Nested.root
CPPipe pathFromEnv:ReactDOM.Client.Root found:false
Path ReactDOM.Client.Root.ren
[{
    "label": "ReactDOM.Client.Root.render",
    "kind": 12,
    "tags": [],
    "detail": "(t, React.element) => unit",
    "documentation": null
  }]

Complete src/CompletionPipeChain.res 88:16
posCursor:[88:16] posNoWhite:[88:15] Found expr:[76:15->93:1]
Pexp_apply ...[76:15->76:46] (~prepare77:3->77:10=...[77:11->77:24], ~render78:3->78:9=...[78:10->91:3], ...[92:2->92:4])
posCursor:[88:16] posNoWhite:[88:15] Found expr:[78:10->91:3]
posCursor:[88:16] posNoWhite:[88:15] Found expr:[79:4->90:14]
posCursor:[88:16] posNoWhite:[88:15] Found expr:[84:4->90:14]
posCursor:[88:16] posNoWhite:[88:15] Found expr:[85:4->90:14]
posCursor:[88:16] posNoWhite:[88:15] Found expr:[88:7->90:14]
posCursor:[88:16] posNoWhite:[88:15] Found expr:[88:7->88:16]
Completable: Cpath Value[root]->ren
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[root]->ren
ContextPath Value[root]
Path root
CPPipe pathFromEnv:ReactDOM.Client.Root found:false
Path ReactDOM.Client.Root.ren
[{
    "label": "ReactDOM.Client.Root.render",
    "kind": 12,
    "tags": [],
    "detail": "(t, React.element) => unit",
    "documentation": null
  }]

Complete src/CompletionPipeChain.res 95:20
posCursor:[95:20] posNoWhite:[95:19] Found expr:[95:3->95:21]
Pexp_apply ...[95:3->95:14] (...[95:15->0:-1])
posCursor:[95:20] posNoWhite:[95:19] Found expr:[95:15->0:-1]
posCursor:[95:20] posNoWhite:[95:19] Found expr:[95:15->0:-1]
Completable: Cpath Value[int]->
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[int]->
ContextPath Value[int]
Path int
CPPipe pathFromEnv:Integer found:true
Path Integer.
[{
    "label": "Integer.toInt",
    "kind": 12,
    "tags": [],
    "detail": "t => int",
    "documentation": null
  }, {
    "label": "Integer.increment",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }, {
    "label": "Integer.decrement",
    "kind": 12,
    "tags": [],
    "detail": "(t, int => int) => t",
    "documentation": null
  }]

Complete src/CompletionPipeChain.res 98:21
posCursor:[98:21] posNoWhite:[98:20] Found expr:[98:3->98:22]
Pexp_apply ...[98:3->98:14] (...[98:15->98:21])
posCursor:[98:21] posNoWhite:[98:20] Found expr:[98:15->98:21]
Completable: Cpath Value[int]->t
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[int]->t
ContextPath Value[int]
Path int
CPPipe pathFromEnv:Integer found:true
Path Integer.t
[{
    "label": "Integer.toInt",
    "kind": 12,
    "tags": [],
    "detail": "t => int",
    "documentation": null
  }]

Complete src/CompletionPipeChain.res 103:8
posCursor:[103:8] posNoWhite:[103:7] Found expr:[103:3->103:8]
Completable: Cpath Value[r]->la
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[r]->la
ContextPath Value[r]
Path r
CPPipe pathFromEnv:Js.Re found:false
Path Js.Re.la
[{
    "label": "Js.Re.lastIndex",
    "kind": 12,
    "tags": [],
    "detail": "t => int",
    "documentation": {"kind": "markdown", "value": "\nReturns the index where the next match will start its search. This property\nwill be modified when the RegExp object is used, if the global (\"g\") flag is\nset.\n\n## Examples\n\n```rescript\nlet re = /ab*TODO/g\nlet str = \"abbcdefabh\"\n\nlet break = ref(false)\nwhile !break.contents {\n  switch Js.Re.exec_(re, str) {\n  | Some(result) => Js.Nullable.iter(Js.Re.captures(result)[0], (. match_) => {\n      let next = Belt.Int.toString(Js.Re.lastIndex(re))\n      Js.log(\"Found \" ++ (match_ ++ (\". Next match starts at \" ++ next)))\n    })\n  | None => break := true\n  }\n}\n```\n\nSee\n[`RegExp: lastIndex`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/lastIndex)\non MDN.\n"}
  }]

Complete src/CompletionPipeChain.res 112:7
posCursor:[112:7] posNoWhite:[112:6] Found expr:[112:3->0:-1]
Completable: Cpath Value[xx]->
Package opens Stdlib.place holder Pervasives.JsxModules.place holder
Resolved opens 1 Stdlib
ContextPath Value[xx]->
ContextPath Value[xx]
Path xx
CPPipe pathFromEnv:Xyz found:true
Path Xyz.
[{
    "label": "Xyz.do",
    "kind": 12,
    "tags": [],
    "detail": "xx => string",
    "documentation": null
  }]

