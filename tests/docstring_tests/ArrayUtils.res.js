// Generated by ReScript, PLEASE EDIT WITH CARE


function splitIntoChunks(arr, chunkSize) {
  let chunks = [];
  let length = arr.length;
  let startRef = 0;
  while (startRef < length) {
    let end = startRef + chunkSize | 0;
    let chunk = arr.slice(startRef, end);
    chunks.push(chunk);
    startRef = end;
  };
  return chunks;
}

async function forEachAsyncParallel(arr, f) {
  await Promise.all(arr.map(f));
}

async function forEachAsyncSerially(arr, f) {
  for (let i = 0, i_finish = arr.length; i < i_finish; ++i) {
    await f(arr[i]);
  }
}

function forEachAsyncInBatches(arr, batchSize, f) {
  return forEachAsyncSerially(splitIntoChunks(arr, batchSize), chunk => forEachAsyncParallel(chunk, f));
}

export {
  splitIntoChunks,
  forEachAsyncParallel,
  forEachAsyncSerially,
  forEachAsyncInBatches,
}
/* No side effect */
