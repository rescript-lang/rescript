let re = [%re {js|/a*[^a|b]/|js}]
let re = [%re {js|/.*[^a|b]/|js}]
let re = [%re {js|/(?P<foo_123', '/|js}]
let re = [%re {js|/(?P<1>a)/|js}]
let re = [%re {js|/(?P<!>a)/|js}]
let re = [%re {js|/(?P<foo!>a)/|js}]
let re = [%re {js|/(?P<foo_123>a)(?P=foo_123/|js}]
let re = [%re {js|/(?P<foo_123>a)(?P=1)/|js}]
let re = [%re {js|/(?P<foo_123>a)(?P=!)/|js}]
let re = [%re {js|/(?P<foo_123>a)(?P=foo_124/|js}]
let re = [%re {js|/(?P<foo_123>a)/|js}]
let re = [%re {js|/(?P<foo_123>a)(?P=foo_123)/|js}]
let re = [%re {js|/\\1/|js}]
let re = [%re {js|/[\\1]/|js}]
let re = [%re {js|/\\09/|js}]
let re = [%re {js|/\\141/|js}]
let re = [%re {js|/(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)\\119/|js}]
let re = [%re {js|/\0/|js}]
let re = [%re {js|/[\0a]/|js}]
let re = [%re {js|/[a\0]/|js}]
let re = [%re {js|/[^a\0]/|js}]
let re = [%re {js|/\a[\b]\f\n\r\t\v/|js}]
let re = [%re {js|/[\a][\b][\f][\n][\r][\t][\v]/|js}]
let re = [%re {js|/\u/|js}]
let re = [%re {js|/\xff/|js}]
let re = [%re {js|/\x00ffffffffffffff/|js}]
let re = [%re {js|/\x00f/|js}]
let re = [%re {js|/\x00fe/|js}]
let re =
  [%re
    {js|/^\w+=(\\[\000-\277]|[^\n\\])*", "SRC=eval.c g.c blah blah blah \\\\\n\tapes.c/|js}]
let re = [%re {js|/a.b/|js}]
let re = [%re {js|/a.b/|js}]
let re = [%re {js|/a.*b/|js}]
let re = [%re {js|/a.{4,5}b/|js}]
let re = [%re {js|/a.b/|js}]
let re = [%re {js|/(?s)a.b/|js}]
let re = [%re {js|/(?s)a.*b/|js}]
let re = [%re {js|/(?s)a.{4,5}b/|js}]
let re = [%re {js|/(?s)a.b/|js}]
let re = [%re {js|/)/|js}]
let re = [%re {js|/abc/|js}]
let re = [%re {js|/abc/|js}]
let re = [%re {js|/abc/|js}]
let re = [%re {js|/abc/|js}]
let re = [%re {js|/abc/|js}]
let re = [%re {js|/abc/|js}]
let re = [%re {js|/ab*c/|js}]
let re = [%re {js|/ab*bc/|js}]
let re = [%re {js|/ab*bc/|js}]
let re = [%re {js|/ab*bc/|js}]
let re = [%re {js|/ab+bc/|js}]
let re = [%re {js|/ab+bc/|js}]
let re = [%re {js|/ab+bc/|js}]
let re = [%re {js|/ab+bc/|js}]
let re = [%re {js|/ab?bc/|js}]
let re = [%re {js|/ab?bc/|js}]
let re = [%re {js|/ab?bc/|js}]
let re = [%re {js|/ab?c/|js}]
let re = [%re {js|/^abc$/|js}]
let re = [%re {js|/^abc$/|js}]
let re = [%re {js|/^abc/|js}]
let re = [%re {js|/^abc$/|js}]
let re = [%re {js|/abc$/|js}]
let re = [%re {js|/^/|js}]
let re = [%re {js|/$/|js}]
let re = [%re {js|/a.c/|js}]
let re = [%re {js|/a.c/|js}]
let re = [%re {js|/a.*c/|js}]
let re = [%re {js|/a.*c/|js}]
let re = [%re {js|/a[bc]d/|js}]
let re = [%re {js|/a[bc]d/|js}]
let re = [%re {js|/a[b-d]e/|js}]
let re = [%re {js|/a[b-d]e/|js}]
let re = [%re {js|/a[b-d]/|js}]
let re = [%re {js|/a[-b]/|js}]
let re = [%re {js|/a[\\-b]/|js}]
let re = [%re {js|/a[]b/|js}]
let re = [%re {js|/a[/|js}]
let re = [%re {js|/a\\/|js}]
let re = [%re {js|/abc)/|js}]
let re = [%re {js|/(abc/|js}]
let re = [%re {js|/a]/|js}]
let re = [%re {js|/a[]]b/|js}]
let re = [%re {js|/a[\\]]b/|js}]
let re = [%re {js|/a[^bc]d/|js}]
let re = [%re {js|/a[^bc]d/|js}]
let re = [%re {js|/a[^-b]c/|js}]
let re = [%re {js|/a[^-b]c/|js}]
let re = [%re {js|/a[^]b]c/|js}]
let re = [%re {js|/a[^]b]c/|js}]
let re = [%re {js|/\\ba\\b/|js}]
let re = [%re {js|/\\ba\\b/|js}]
let re = [%re {js|/\\ba\\b/|js}]
let re = [%re {js|/\\by\\b/|js}]
let re = [%re {js|/\\by\\b/|js}]
let re = [%re {js|/\\by\\b/|js}]
let re = [%re {js|/x\\b/|js}]
let re = [%re {js|/x\\B/|js}]
let re = [%re {js|/\\Bz/|js}]
let re = [%re {js|/z\\B/|js}]
let re = [%re {js|/\\Bx/|js}]
let re = [%re {js|/\\Ba\\B/|js}]
let re = [%re {js|/\\Ba\\B/|js}]
let re = [%re {js|/\\Ba\\B/|js}]
let re = [%re {js|/\\By\\B/|js}]
let re = [%re {js|/\\By\\B/|js}]
let re = [%re {js|/\\By\\b/|js}]
let re = [%re {js|/\\by\\B/|js}]
let re = [%re {js|/\\By\\B/|js}]
let re = [%re {js|/ab|cd/|js}]
let re = [%re {js|/ab|cd/|js}]
let re = [%re {js|/()ef/|js}]
let re = [%re {js|/$b/|js}]
let re = [%re {js|/a\\(b/|js}]
let re = [%re {js|/a\\(*b/|js}]
let re = [%re {js|/a\\(*b/|js}]
let re = [%re {js|/a\\\\b/|js}]
let re = [%re {js|/((a))/|js}]
let re = [%re {js|/(a)b(c)/|js}]
let re = [%re {js|/a+b+c/|js}]
let re = [%re {js|/(a+|b)*/|js}]
let re = [%re {js|/(a+|b)+/|js}]
let re = [%re {js|/(a+|b)?/|js}]
let re = [%re {js|/)(/|js}]
let re = [%re {js|/[^ab]*/|js}]
let re = [%re {js|/abc/|js}]
let re = [%re {js|/a*/|js}]
let re = [%re {js|/a|b|c|d|e/|js}]
let re = [%re {js|/(a|b|c|d|e)f/|js}]
let re = [%re {js|/abcd*efg/|js}]
let re = [%re {js|/ab*/|js}]
let re = [%re {js|/ab*/|js}]
let re = [%re {js|/(ab|cd)e/|js}]
let re = [%re {js|/[abhgefdc]ij/|js}]
let re = [%re {js|/^(ab|cd)e/|js}]
let re = [%re {js|/(abc|)ef/|js}]
let re = [%re {js|/(a|b)c*d/|js}]
let re = [%re {js|/(ab|ab*)bc/|js}]
let re = [%re {js|/a([bc]*)c*/|js}]
let re = [%re {js|/a([bc]*)(c*d)/|js}]
let re = [%re {js|/a([bc]+)(c*d)/|js}]
let re = [%re {js|/a([bc]*)(c+d)/|js}]
let re = [%re {js|/a[bcd]*dcdcde/|js}]
let re = [%re {js|/a[bcd]+dcdcde/|js}]
let re = [%re {js|/(ab|a)b*c/|js}]
let re = [%re {js|/((a)(b)c)(d)/|js}]
let re = [%re {js|/[a-zA-Z_][a-zA-Z0-9_]*/|js}]
let re = [%re {js|/^a(bc+|b[eh])g|.h$/|js}]
let re = [%re {js|/(bc+d$|ef*g.|h?i(j|k))/|js}]
let re = [%re {js|/(bc+d$|ef*g.|h?i(j|k))/|js}]
let re = [%re {js|/(bc+d$|ef*g.|h?i(j|k))/|js}]
let re = [%re {js|/(bc+d$|ef*g.|h?i(j|k))/|js}]
let re = [%re {js|/(bc+d$|ef*g.|h?i(j|k))/|js}]
let re = [%re {js|/(((((((((a)))))))))/|js}]
let re = [%re {js|/multiple words of text/|js}]
let re = [%re {js|/multiple words/|js}]
let re = [%re {js|/(.*)c(.*)/|js}]
let re = [%re {js|/\\((.*), (.*)\\)/|js}]
let re = [%re {js|/[k]/|js}]
let re = [%re {js|/a[-]?c/|js}]
let re = [%re {js|/(abc)\\1/|js}]
let re = [%re {js|/([a-c]*)\\1/|js}]
let re = [%re {js|/^(.+)?B/|js}]
let re = [%re {js|/(a+).\\1$/|js}]
let re = [%re {js|/^(a+).\\1$/|js}]
let re = [%re {js|/(abc)\\1/|js}]
let re = [%re {js|/([a-c]+)\\1/|js}]
let re = [%re {js|/(a)\\1/|js}]
let re = [%re {js|/(a+)\\1/|js}]
let re = [%re {js|/(a+)+\\1/|js}]
let re = [%re {js|/(a).+\\1/|js}]
let re = [%re {js|/(a)ba*\\1/|js}]
let re = [%re {js|/(aa|a)a\\1$/|js}]
let re = [%re {js|/(a|aa)a\\1$/|js}]
let re = [%re {js|/(a+)a\\1$/|js}]
let re = [%re {js|/([abc]*)\\1/|js}]
let re = [%re {js|/(a)(b)c|ab/|js}]
let re = [%re {js|/(a)+x/|js}]
let re = [%re {js|/([ac])+x/|js}]
let re = [%re {js|/([^.]*)\\.([^:]*):[T ]+(.*)/|js}]
let re = [%re {js|/([^N]*N)+/|js}]
let re = [%re {js|/([^N]*N)+/|js}]
let re = [%re {js|/([abc]*)x/|js}]
let re = [%re {js|/([abc]*)x/|js}]
let re = [%re {js|/([xyz]*)x/|js}]
let re = [%re {js|/(a)+b|aac/|js}]
let re = [%re {js|/(?P<i d>aaa)a/|js}]
let re = [%re {js|/(?P<id>aaa)a/|js}]
let re = [%re {js|/(?P<id>aa)(?P=id)/|js}]
let re = [%re {js|/(?P<id>aa)(?P=xd)/|js}]
let re = [%re {js|/\\1/|js}]
let re = [%re {js|/\\09/|js}]
let re = [%re {js|/\\141/|js}]
let re = [%re {js|/(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)\\119/|js}]
let re = [%re {js|/abc/|js}]
let re = [%re {js|/abc/|js}]
let re = [%re {js|/abc/|js}]
let re = [%re {js|/abc/|js}]
let re = [%re {js|/abc/|js}]
let re = [%re {js|/abc/|js}]
let re = [%re {js|/ab*c/|js}]
let re = [%re {js|/ab*bc/|js}]
let re = [%re {js|/ab*bc/|js}]
let re = [%re {js|/ab*bc/|js}]
let re = [%re {js|/ab{0,}bc/|js}]
let re = [%re {js|/ab+bc/|js}]
let re = [%re {js|/ab+bc/|js}]
let re = [%re {js|/ab+bc/|js}]
let re = [%re {js|/ab{1,}bc/|js}]
let re = [%re {js|/ab+bc/|js}]
let re = [%re {js|/ab{1,}bc/|js}]
let re = [%re {js|/ab{1,3}bc/|js}]
let re = [%re {js|/ab{3,4}bc/|js}]
let re = [%re {js|/ab{4,5}bc/|js}]
let re = [%re {js|/ab?bc/|js}]
let re = [%re {js|/ab?bc/|js}]
let re = [%re {js|/ab{0,1}bc/|js}]
let re = [%re {js|/ab?bc/|js}]
let re = [%re {js|/ab?c/|js}]
let re = [%re {js|/ab{0,1}c/|js}]
let re = [%re {js|/^abc$/|js}]
let re = [%re {js|/^abc$/|js}]
let re = [%re {js|/^abc/|js}]
let re = [%re {js|/^abc$/|js}]
let re = [%re {js|/abc$/|js}]
let re = [%re {js|/^/|js}]
let re = [%re {js|/$/|js}]
let re = [%re {js|/a.c/|js}]
let re = [%re {js|/a.c/|js}]
let re = [%re {js|/a.*c/|js}]
let re = [%re {js|/a.*c/|js}]
let re = [%re {js|/a[bc]d/|js}]
let re = [%re {js|/a[bc]d/|js}]
let re = [%re {js|/a[b-d]e/|js}]
let re = [%re {js|/a[b-d]e/|js}]
let re = [%re {js|/a[b-d]/|js}]
let re = [%re {js|/a[-b]/|js}]
let re = [%re {js|/a[b-]/|js}]
let re = [%re {js|/a[b-a]/|js}]
let re = [%re {js|/a[]b/|js}]
let re = [%re {js|/a[/|js}]
let re = [%re {js|/a]/|js}]
let re = [%re {js|/a[]]b/|js}]
let re = [%re {js|/a[^bc]d/|js}]
let re = [%re {js|/a[^bc]d/|js}]
let re = [%re {js|/a[^-b]c/|js}]
let re = [%re {js|/a[^-b]c/|js}]
let re = [%re {js|/a[^]b]c/|js}]
let re = [%re {js|/a[^]b]c/|js}]
let re = [%re {js|/ab|cd/|js}]
let re = [%re {js|/ab|cd/|js}]
let re = [%re {js|/()ef/|js}]
let re = [%re {js|/(*)b/|js}]
let re = [%re {js|/$b/|js}]
let re = [%re {js|/a\\/|js}]
let re = [%re {js|/a\\(b/|js}]
let re = [%re {js|/a\\(*b/|js}]
let re = [%re {js|/a\\(*b/|js}]
let re = [%re {js|/a\\\\b/|js}]
let re = [%re {js|/abc)/|js}]
let re = [%re {js|/(abc/|js}]
let re = [%re {js|/((a))/|js}]
let re = [%re {js|/(a)b(c)/|js}]
let re = [%re {js|/a+b+c/|js}]
let re = [%re {js|/a{1,}b{1,}c/|js}]
let re = [%re {js|/a**/|js}]
let re = [%re {js|/a.+?c/|js}]
let re = [%re {js|/(a+|b)*/|js}]
let re = [%re {js|/(a+|b){0,}/|js}]
let re = [%re {js|/(a+|b)+/|js}]
let re = [%re {js|/(a+|b){1,}/|js}]
let re = [%re {js|/(a+|b)?/|js}]
let re = [%re {js|/(a+|b){0,1}/|js}]
let re = [%re {js|/)(/|js}]
let re = [%re {js|/[^ab]*/|js}]
let re = [%re {js|/abc/|js}]
let re = [%re {js|/a*/|js}]
let re = [%re {js|/([abc])*d/|js}]
let re = [%re {js|/([abc])*bcd/|js}]
let re = [%re {js|/a|b|c|d|e/|js}]
let re = [%re {js|/(a|b|c|d|e)f/|js}]
let re = [%re {js|/abcd*efg/|js}]
let re = [%re {js|/ab*/|js}]
let re = [%re {js|/ab*/|js}]
let re = [%re {js|/(ab|cd)e/|js}]
let re = [%re {js|/[abhgefdc]ij/|js}]
let re = [%re {js|/^(ab|cd)e/|js}]
let re = [%re {js|/(abc|)ef/|js}]
let re = [%re {js|/(a|b)c*d/|js}]
let re = [%re {js|/(ab|ab*)bc/|js}]
let re = [%re {js|/a([bc]*)c*/|js}]
let re = [%re {js|/a([bc]*)(c*d)/|js}]
let re = [%re {js|/a([bc]+)(c*d)/|js}]
let re = [%re {js|/a([bc]*)(c+d)/|js}]
let re = [%re {js|/a[bcd]*dcdcde/|js}]
let re = [%re {js|/a[bcd]+dcdcde/|js}]
let re = [%re {js|/(ab|a)b*c/|js}]
let re = [%re {js|/((a)(b)c)(d)/|js}]
let re = [%re {js|/[a-zA-Z_][a-zA-Z0-9_]*/|js}]
let re = [%re {js|/^a(bc+|b[eh])g|.h$/|js}]
let re = [%re {js|/(bc+d$|ef*g.|h?i(j|k))/|js}]
let re = [%re {js|/(bc+d$|ef*g.|h?i(j|k))/|js}]
let re = [%re {js|/(bc+d$|ef*g.|h?i(j|k))/|js}]
let re = [%re {js|/(bc+d$|ef*g.|h?i(j|k))/|js}]
let re = [%re {js|/(bc+d$|ef*g.|h?i(j|k))/|js}]
let re = [%re {js|/((((((((((a))))))))))/|js}]
let re = [%re {js|/((((((((((a))))))))))\\10/|js}]
let re = [%re {js|/((((((((((a))))))))))\\41/|js}]
let re = [%re {js|/(?i)((((((((((a))))))))))\\41/|js}]
let re = [%re {js|/(((((((((a)))))))))/|js}]
let re = [%re {js|/multiple words of text/|js}]
let re = [%re {js|/multiple words/|js}]
let re = [%re {js|/(.*)c(.*)/|js}]
let re = [%re {js|/\\((.*), (.*)\\)/|js}]
let re = [%re {js|/[k]/|js}]
let re = [%re {js|/a[-]?c/|js}]
let re = [%re {js|/(abc)\\1/|js}]
let re = [%re {js|/([a-c]*)\\1/|js}]
let re = [%re {js|/(?i)abc/|js}]
let re = [%re {js|/(?i)abc/|js}]
let re = [%re {js|/(?i)abc/|js}]
let re = [%re {js|/(?i)abc/|js}]
let re = [%re {js|/(?i)abc/|js}]
let re = [%re {js|/(?i)abc/|js}]
let re = [%re {js|/(?i)ab*c/|js}]
let re = [%re {js|/(?i)ab*bc/|js}]
let re = [%re {js|/(?i)ab*bc/|js}]
let re = [%re {js|/(?i)ab*?bc/|js}]
let re = [%re {js|/(?i)ab{0,}?bc/|js}]
let re = [%re {js|/(?i)ab+?bc/|js}]
let re = [%re {js|/(?i)ab+bc/|js}]
let re = [%re {js|/(?i)ab+bc/|js}]
let re = [%re {js|/(?i)ab{1,}bc/|js}]
let re = [%re {js|/(?i)ab+bc/|js}]
let re = [%re {js|/(?i)ab{1,}?bc/|js}]
let re = [%re {js|/(?i)ab{1,3}?bc/|js}]
let re = [%re {js|/(?i)ab{3,4}?bc/|js}]
let re = [%re {js|/(?i)ab{4,5}?bc/|js}]
let re = [%re {js|/(?i)ab??bc/|js}]
let re = [%re {js|/(?i)ab??bc/|js}]
let re = [%re {js|/(?i)ab{0,1}?bc/|js}]
let re = [%re {js|/(?i)ab??bc/|js}]
let re = [%re {js|/(?i)ab??c/|js}]
let re = [%re {js|/(?i)ab{0,1}?c/|js}]
let re = [%re {js|/(?i)^abc$/|js}]
let re = [%re {js|/(?i)^abc$/|js}]
let re = [%re {js|/(?i)^abc/|js}]
let re = [%re {js|/(?i)^abc$/|js}]
let re = [%re {js|/(?i)abc$/|js}]
let re = [%re {js|/(?i)^/|js}]
let re = [%re {js|/(?i)$/|js}]
let re = [%re {js|/(?i)a.c/|js}]
let re = [%re {js|/(?i)a.c/|js}]
let re = [%re {js|/(?i)a.*?c/|js}]
let re = [%re {js|/(?i)a.*c/|js}]
let re = [%re {js|/(?i)a[bc]d/|js}]
let re = [%re {js|/(?i)a[bc]d/|js}]
let re = [%re {js|/(?i)a[b-d]e/|js}]
let re = [%re {js|/(?i)a[b-d]e/|js}]
let re = [%re {js|/(?i)a[b-d]/|js}]
let re = [%re {js|/(?i)a[-b]/|js}]
let re = [%re {js|/(?i)a[b-]/|js}]
let re = [%re {js|/(?i)a[b-a]/|js}]
let re = [%re {js|/(?i)a[]b/|js}]
let re = [%re {js|/(?i)a[/|js}]
let re = [%re {js|/(?i)a]/|js}]
let re = [%re {js|/(?i)a[]]b/|js}]
let re = [%re {js|/(?i)a[^bc]d/|js}]
let re = [%re {js|/(?i)a[^bc]d/|js}]
let re = [%re {js|/(?i)a[^-b]c/|js}]
let re = [%re {js|/(?i)a[^-b]c/|js}]
let re = [%re {js|/(?i)a[^]b]c/|js}]
let re = [%re {js|/(?i)a[^]b]c/|js}]
let re = [%re {js|/(?i)ab|cd/|js}]
let re = [%re {js|/(?i)ab|cd/|js}]
let re = [%re {js|/(?i)()ef/|js}]
let re = [%re {js|/(?i)*a/|js}]
let re = [%re {js|/(?i)(*)b/|js}]
let re = [%re {js|/(?i)$b/|js}]
let re = [%re {js|/(?i)a\\/|js}]
let re = [%re {js|/(?i)a\\(b/|js}]
let re = [%re {js|/(?i)a\\(*b/|js}]
let re = [%re {js|/(?i)a\\(*b/|js}]
let re = [%re {js|/(?i)a\\\\b/|js}]
let re = [%re {js|/(?i)abc)/|js}]
let re = [%re {js|/(?i)(abc/|js}]
let re = [%re {js|/(?i)((a))/|js}]
let re = [%re {js|/(?i)(a)b(c)/|js}]
let re = [%re {js|/(?i)a+b+c/|js}]
let re = [%re {js|/(?i)a{1,}b{1,}c/|js}]
let re = [%re {js|/(?i)a**/|js}]
let re = [%re {js|/(?i)a.+?c/|js}]
let re = [%re {js|/(?i)a.*?c/|js}]
let re = [%re {js|/(?i)a.{0,5}?c/|js}]
let re = [%re {js|/(?i)(a+|b)*/|js}]
let re = [%re {js|/(?i)(a+|b){0,}/|js}]
let re = [%re {js|/(?i)(a+|b)+/|js}]
let re = [%re {js|/(?i)(a+|b){1,}/|js}]
let re = [%re {js|/(?i)(a+|b)?/|js}]
let re = [%re {js|/(?i)(a+|b){0,1}/|js}]
let re = [%re {js|/(?i)(a+|b){0,1}?/|js}]
let re = [%re {js|/(?i))(/|js}]
let re = [%re {js|/(?i)[^ab]*/|js}]
let re = [%re {js|/(?i)abc/|js}]
let re = [%re {js|/(?i)a*/|js}]
let re = [%re {js|/(?i)([abc])*d/|js}]
let re = [%re {js|/(?i)([abc])*bcd/|js}]
let re = [%re {js|/(?i)a|b|c|d|e/|js}]
let re = [%re {js|/(?i)(a|b|c|d|e)f/|js}]
let re = [%re {js|/(?i)abcd*efg/|js}]
let re = [%re {js|/(?i)ab*/|js}]
let re = [%re {js|/(?i)ab*/|js}]
let re = [%re {js|/(?i)(ab|cd)e/|js}]
let re = [%re {js|/(?i)[abhgefdc]ij/|js}]
let re = [%re {js|/(?i)^(ab|cd)e/|js}]
let re = [%re {js|/(?i)(abc|)ef/|js}]
let re = [%re {js|/(?i)(a|b)c*d/|js}]
let re = [%re {js|/(?i)(ab|ab*)bc/|js}]
let re = [%re {js|/(?i)a([bc]*)c*/|js}]
let re = [%re {js|/(?i)a([bc]*)(c*d)/|js}]
let re = [%re {js|/(?i)a([bc]+)(c*d)/|js}]
let re = [%re {js|/(?i)a([bc]*)(c+d)/|js}]
let re = [%re {js|/(?i)a[bcd]*dcdcde/|js}]
let re = [%re {js|/(?i)a[bcd]+dcdcde/|js}]
let re = [%re {js|/(?i)(ab|a)b*c/|js}]
let re = [%re {js|/(?i)((a)(b)c)(d)/|js}]
let re = [%re {js|/(?i)[a-zA-Z_][a-zA-Z0-9_]*/|js}]
let re = [%re {js|/(?i)^a(bc+|b[eh])g|.h$/|js}]
let re = [%re {js|/(?i)(bc+d$|ef*g.|h?i(j|k))/|js}]
let re = [%re {js|/(?i)(bc+d$|ef*g.|h?i(j|k))/|js}]
let re = [%re {js|/(?i)(bc+d$|ef*g.|h?i(j|k))/|js}]
let re = [%re {js|/(?i)(bc+d$|ef*g.|h?i(j|k))/|js}]
let re = [%re {js|/(?i)(bc+d$|ef*g.|h?i(j|k))/|js}]
let re = [%re {js|/(?i)((((((((((a))))))))))/|js}]
let re = [%re {js|/(?i)((((((((((a))))))))))\\10/|js}]
let re = [%re {js|/(?i)(((((((((a)))))))))/|js}]
let re = [%re {js|/(?i)(?:(?:(?:(?:(?:(?:(?:(?:(?:(a))))))))))/|js}]
let re = [%re {js|/(?i)(?:(?:(?:(?:(?:(?:(?:(?:(?:(a|b|c))))))))))/|js}]
let re = [%re {js|/(?i)multiple words of text/|js}]
let re = [%re {js|/(?i)multiple words/|js}]
let re = [%re {js|/(?i)(.*)c(.*)/|js}]
let re = [%re {js|/(?i)\\((.*), (.*)\\)/|js}]
let re = [%re {js|/(?i)[k]/|js}]
let re = [%re {js|/(?i)a[-]?c/|js}]
let re = [%re {js|/(?i)(abc)\\1/|js}]
let re = [%re {js|/(?i)([a-c]*)\\1/|js}]
let re = [%re {js|/a(?!b)./|js}]
let re = [%re {js|/a(?=d)./|js}]
let re = [%re {js|/a(?=c|d)./|js}]
let re = [%re {js|/a(?:b|c|d)(.)/|js}]
let re = [%re {js|/a(?:b|c|d)*(.)/|js}]
let re = [%re {js|/a(?:b|c|d)+?(.)/|js}]
let re = [%re {js|/a(?:b|(c|e){1,2}?|d)+?(.)/|js}]
let re = [%re {js|/^(.+)?B/|js}]
let re = [%re {js|/(?<!-):(.*?)(?<!-):/|js}]
let re = [%re {js|/(?<!\\\\):(.*?)(?<!\\\\):/|js}]
let re = [%re {js|/(?<!\\?)'(.*?)(?<!\\?)'/|js}]
let re = [%re {js|/w(?# comment/|js}]
let re = [%re {js|/w(?# comment 1)xy(?# comment 2)z/|js}]
let re = [%re {js|/(?i)w/|js}]
let re = [%re {js|/a.b/|js}]
let re = [%re {js|/(?s)a.b/|js}]
let re = [%re {js|/\\w+/|js}]
let re = [%re {js|/[\\w]+/|js}]
let re = [%re {js|/\\D+/|js}]
let re = [%re {js|/[\\D]+/|js}]
let re = [%re {js|/[\\da-fA-F]+/|js}]
let re = [%re {js|/([\s]*)([\S]*)([\s]*)/|js}]
let re = [%re {js|/(\s*)(\S*)(\s*)/|js}]
let re = [%re {js|/\xff/|js}]
let re = [%re {js|/\x00ff/|js}]
let re = [%re {js|/\t\n\v\r\f\a/|js}]
let re = [%re {js|/\t\n\v\r\f\a/|js}]
let re = [%re {js|/\t\n\v\r\f\a/|js}]
let re = [%re {js|/[\t][\n][\v][\r][\f][\b]/|js}]
let re = [%re {js|/(([a-z]+):)?([a-z]+)$/|js}]
let re = [%re {js|/((.)\1+)/|js}]
let re = [%re {js|/.*d/|js}]
let re = [%re {js|/(', '/|js}]
let re = [%re {js|/[\41]/|js}]
let re = [%re {js|/(x?)?/|js}]
let re = [%re {js|/(?x) foo /|js}]
let re = [%re {js|/(?<!abc)(d.f)/|js}]
let re = [%re {js|/[\w-]+/|js}]
let re = [%re {js|/.*?\S *:/|js}]
let re = [%re {js|/a[ ]*?\ (\d+).*/|js}]
let re = [%re {js|/a[ ]*?\ (\d+).*/|js}]
let re = [%re {js|/(?ms).*?x\s*\Z(.*)/|js}]
let re = [%re {js|/(?i)M+/|js}]
let re = [%re {js|/(?i)m+/|js}]
let re = [%re {js|/(?i)[M]+/|js}]
let re = [%re {js|/(?i)[m]+/|js}]
let re = [%re {js|/^*/|js}]
let re = [%re {js|/"(?:\\"|[^"])*?"/|js}]
let re = [%re {js|/^.*?$/|js}]
let re = [%re {js|/a[^>]*?b/|js}]
let re = [%re {js|/^a*?$/|js}]
let re = [%re {js|/^((a)c)?(ab)$/|js}]
let re = [%re {js|/^([ab]*?)(?=(b)?)c/|js}]
let re = [%re {js|/^([ab]*?)(?!(b))c/|js}]
let re = [%re {js|/^([ab]*?)(?<!(a))c/|js}]