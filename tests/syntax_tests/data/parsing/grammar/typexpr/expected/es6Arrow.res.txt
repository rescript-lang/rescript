type nonrec t = (x -> unit (a:1)) function$
type nonrec t = (x -> unit (a:1)) function$
type nonrec t = (int -> string -> unit (a:2)) function$
type nonrec t =
  (a:((int)[@res.namedArgLoc ]) -> b:((int)[@res.namedArgLoc ]) -> int (a:2))
    function$
type nonrec t =
  (?a:((int)[@res.namedArgLoc ]) ->
     ?b:((int)[@res.namedArgLoc ]) -> int (a:2))
    function$
type nonrec t =
  (int -> (int -> (int -> int (a:1)) function$ (a:1)) function$ (a:1))
    function$
type nonrec t =
  (a:((int)[@res.namedArgLoc ]) ->
     (b:((int)[@res.namedArgLoc ]) ->
        (c:((int)[@res.namedArgLoc ]) -> int (a:1)) function$ (a:1))
       function$ (a:1))
    function$
let (f : (x -> unit (a:1)) function$) = xf
let (f : (x -> unit (a:1)) function$) = xf
let (f : (int -> string -> unit (a:2)) function$) = xf
let (t :
  (a:((int)[@res.namedArgLoc ]) -> b:((int)[@res.namedArgLoc ]) -> int (a:2))
    function$)
  = xf
let (t :
  (?a:((int)[@res.namedArgLoc ]) ->
     ?b:((int)[@res.namedArgLoc ]) -> int (a:2))
    function$)
  = xf
let (t :
  (int -> (int -> (int -> int (a:1)) function$ (a:1)) function$ (a:1))
    function$)
  = xf
let (t :
  (a:((int)[@res.namedArgLoc ]) ->
     (b:((int)[@res.namedArgLoc ]) ->
        (c:((int)[@res.namedArgLoc ]) -> int (a:1)) function$ (a:1))
       function$ (a:1))
    function$)
  = xf
type nonrec t = f:((int)[@res.namedArgLoc ]) -> string
type nonrec t = ?f:((int)[@res.namedArgLoc ]) -> string
let (f : f:((int)[@res.namedArgLoc ]) -> string) = fx
let (f : ?f:((int)[@res.namedArgLoc ]) -> string) = fx
type nonrec t = (f:((int)[@res.namedArgLoc ]) -> string (a:1)) function$
type nonrec t = f:((int)[@res.namedArgLoc ]) -> string
type nonrec t =
  (f:(((int -> string (a:1)) function$)[@res.namedArgLoc ]) -> float (a:1))
    function$
type nonrec t =
  f:(((int -> string (a:1)) function$)[@res.namedArgLoc ]) -> float
type nonrec t =
  f:((int)[@res.namedArgLoc ]) -> (string -> float (a:1)) function$
type nonrec t =
  ((a:((int)[@res.namedArgLoc ]) ->
      ((b:((int)[@res.namedArgLoc ]) -> ((float)[@attr ]) -> unit)[@attrBeforeLblB
                                                                    ]) (a:3))
    [@attrBeforeLblA ]) function$
type nonrec t =
  (((a:((int)[@res.namedArgLoc ]) ->
       (((b:((int)[@res.namedArgLoc ]) ->
            (((float)[@attr ]) -> unit (a:1)) function$ (a:1))
           function$)[@attrBeforeLblB ]) (a:1))
      function$)[@attrBeforeLblA ])
type nonrec t = ((a:((int)[@res.namedArgLoc ]) -> unit)[@attr ])
type nonrec 'a getInitialPropsFn =
  (< query: string dict  ;req: 'a Js.t Js.Nullable.t   >  ->
     'a Js.t Js.Promise.t (a:1))
    function$